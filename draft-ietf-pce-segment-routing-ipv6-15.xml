<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes" ?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="no"?>
<?rfc rfcedstyle="yes"?>
<?rfc subcompact="no"?>
<?rfc compact="yes" ?>
<?rfc iprnotified="Yes" ?>
<?rfc strict="no" ?>
<rfc category="std" docName="draft-ietf-pce-segment-routing-ipv6-15"
     ipr="trust200902">
  <front>
    <title abbrev="PCEP-SRv6">Path Computation Element Communication Protocol (PCEP) Extensions for Segment Routing leveraging the IPv6 dataplane</title>

    <author fullname="Cheng Li(Editor)" initials="C." surname="Li">
      <organization>Huawei Technologies</organization>

      <address>
        <postal>
          <street>Huawei Campus, No. 156 Beiqing Rd.</street>

          <city>Beijing</city>

          <region/>

          <code>100095</code>

          <country>China</country>
        </postal>

        <phone/>

        <facsimile/>

        <email>c.l@huawei.com</email>

        <uri/>
      </address>
    </author>

    <author fullname="Mahendra Singh Negi" initials="M." surname="Negi">
      <organization>RtBrick Inc</organization>

      <address>
        <postal>
          <street/>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code/>

          <country>India</country>
        </postal>

        <email>mahend.ietf@gmail.com</email>
      </address>
    </author>

    <author fullname="Siva Sivabalan" initials="S." surname="Sivabalan">
      <organization>Ciena Corporation</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <facsimile/>

        <email>msiva282@gmail.com</email>

        <uri/>
      </address>
    </author>

    <author fullname="Mike Koldychev" initials="M." surname="Koldychev">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>Canada</country>
        </postal>

        <email>mkoldych@cisco.com</email>
      </address>
    </author>

    <author fullname="Prejeeth Kaladharan" initials="P." surname="Kaladharan">
      <organization>RtBrick Inc</organization>

      <address>
        <postal>
          <street/>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code/>

          <country>India</country>
        </postal>

        <email>prejeeth@rtbrick.com</email>
      </address>
    </author>

    <author fullname="Yongqing Zhu" initials="Y." surname="Zhu">
      <organization>China Telecom</organization>

      <address>
        <postal>
          <street>109 West Zhongshan Ave, Tianhe District</street>

          <city>Bangalore</city>

          <region>Guangzhou</region>

          <code/>

          <country>P.R. China</country>
        </postal>

        <email>zhuyq8@chinatelecom.cn</email>
      </address>
    </author>

    <date/>

    <area>Routing</area>

    <workgroup>PCE Working Group</workgroup>

    <abstract>
      <t>The Source Packet Routing in Networking (SPRING) architecture
      describes how Segment Routing (SR) can be used to steer packets through
      an IPv6 or MPLS network using the source routing paradigm. SR enables
      any head-end node to select any path without relying on a hop-by-hop
      signaling technique (e.g., LDP or RSVP-TE).</t>

      <t>It depends only on "segments" that are advertised by Link-State
      IGPs. A Segment Routed Path can be derived from a variety of mechanisms,
      including an IGP Shortest Path Tree (SPT), explicit configuration, or a
      PCE.</t>

      <t>Since SR can be applied to both MPLS and IPv6 forwarding plane, a PCE
      should be able to compute SR-Path for both MPLS and IPv6 forwarding
      plane. This document describes the extensions required for SR support
      for IPv6 data plane in Path Computation Element communication Protocol
      (PCEP). The PCEP extension and mechanism to support SR-MPLS is described
      in RFC 8664. This document extends it to support SRv6 (SR over
      IPv6).</t>
    </abstract>


  </front>

  <middle>
    <section title="Introduction">
      <t>As per <xref target="RFC8402"/>, with Segment Routing (SR), a node
      steers a packet through an ordered list of instructions, called
      segments. A segment can represent any instruction, topological or
      service-based. A segment can have a semantic local to an SR node or
      global within an SR domain. SR allows to enforce a flow through any path
      and service chain while maintaining per-flow state only at the ingress
      node of the SR domain. Segments can be derived from different
      components: IGP, BGP, Services, Contexts, Locater, etc. The list of
      segment forming the path is called the Segment List and is encoded in
      the packet header. Segment Routing can be applied to the IPv6
      architecture with the Segment Routing Header (SRH) <xref
      target="RFC8754"/>. A segment is encoded as an IPv6 address. An ordered
      list of segments is encoded as an ordered list of IPv6 addresses in the
      routing header. The active segment is indicated by the Destination
      Address of the packet. Upon completion of a segment, a pointer in the
      new routing header is incremented and indicates the next segment.</t>

      <t>Segment Routing use cases are described in <xref target="RFC7855"/>
      and <xref target="RFC8354"/>. Segment Routing protocol extensions are
      defined in <xref target="RFC8667"/>, and <xref target="RFC8666"/>.</t>

      <t>As per <xref target="RFC8754"/>, an SRv6 Segment identifier is an 128-bit value.
      "SRv6 SID" or simply "SID" are often used as a shorter reference for
      "SRv6 Segment". Further details are in an illustration provided in <xref
      target="RFC8986"/>.</t>

      <t>The SR architecture can be applied to the MPLS forwarding plane
      without any change, in which case an SR path corresponds to an MPLS
      Label Switching Path (LSP). The SR is applied to IPV6 forwarding plane
      using Source Routing Header (SRH) <xref target="RFC8754"/>. A SR path can be derived from an IGP Shortest Path Tree
      (SPT), but SR-TE paths may not follow IGP SPT. Such paths may be chosen
      by a suitable network planning tool, or a PCE and provisioned on the
      ingress node.</t>

      <t><xref target="RFC5440"/> describes Path Computation Element
      communication Protocol (PCEP) for communication between a Path
      Computation Client (PCC) and a Path Computation Element (PCE) or between
      a pair of PCEs. A PCE or a PCC operating as a PCE (in hierarchical PCE
      environment) computes paths for MPLS Traffic Engineering LSPs (MPLS-TE
      LSPs) based on various constraints and optimization criteria. <xref
      target="RFC8231"/> specifies extensions to PCEP that allow a stateful
      PCE to compute and recommend network paths in compliance with <xref
      target="RFC4657"/> and defines objects and TLVs for MPLS-TE LSPs.
      Stateful PCEP extensions provide synchronization of LSP state between a
      PCC and a PCE or between a pair of PCEs, delegation of LSP control,
      reporting of LSP state from a PCC to a PCE, controlling the setup and
      path routing of an LSP from a PCE to a PCC. Stateful PCEP extensions are
      intended for an operational model in which LSPs are configured on the
      PCC, and control over them is delegated to the PCE.</t>

      <t>A mechanism to dynamically initiate LSPs on a PCC based on the
      requests from a stateful PCE or a controller using stateful PCE is
      specified in <xref target="RFC8281"/>. As per <xref target="RFC8664"/>,
      it is possible to use a stateful PCE for computing one or more SR-TE
      paths taking into account various constraints and objective functions.
      Once a path is chosen, the stateful PCE can initiate an SR-TE path on a
      PCC using PCEP extensions specified in <xref target="RFC8281"/> using
      the SR specific PCEP extensions specified in <xref target="RFC8664"/>.
      <xref target="RFC8664"/> specifies PCEP extensions for supporting a
      SR-TE LSP for MPLS data plane. This document extends <xref
      target="RFC8664"/> to support SR for IPv6 data plane. Additionally,
      using procedures described in this document, a PCC can request an SRv6
      path from either stateful or a stateless PCE. This specification relies
      on the PATH-SETUP-TYPE TLV and procedures specified in <xref
      target="RFC8408"/>.</t>

      <t>This specification provides a mechanism for a network controller
      (acting as a PCE) to instantiate candidate paths for an SR Policy onto a
      head-end node (acting as a PCC) using PCEP. For more information on the
      SR Policy Architecture, see <xref
      target="RFC9256"/> which is applicable to both SR-MPLS and SRv6.</t>

    <section title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
      they appear in all capitals, as shown here.</t>
    </section>
    </section>

    <!-- Introduction -->

    <section title="Terminology">
      <t>This document uses the following terms defined in <xref
      target="RFC5440"/>: PCC, PCE, PCEP, PCEP Peer.</t>

      <t>This document uses the following terms defined in <xref
      target="RFC8051"/>: Stateful PCE, Delegation.</t>

      <t>The message formats in this document are specified using Routing
      Backus-Naur Format (RBNF) encoding as specified in <xref
      target="RFC5511"/>.</t>

      <t>Further, following terms are used in the document: <list style="hanging">
          <!--<t hangText="NAI:">Node or Adjacency Identifier.</t>

          <t hangText="PCC:">Path Computation Client.</t>

          <t hangText="PCE:">Path Computation Element.</t>

          <t hangText="PCEP:">Path Computation Element Protocol.</t>-->

          <t hangText="MSD:">Maximum SID Depth.</t>

          <t hangText="PST:">Path Setup Type.</t>


          <t hangText="SR:">Segment Routing.</t>

          <t hangText="SID:">Segment Identifier.</t>

          <t hangText="SRv6:">Segment Routing for IPv6 forwarding plane.</t>

          <t hangText="SRH:">IPv6 Segment Routing Header.</t>

          <t hangText="SR Path:">IPv6 Segment List (List of IPv6 SIDs
          representing a path in IPv6 SR domain in the context of this document)</t>
        </list></t>

      <t>Further, note that the term LSP used in the PCEP specifications,
      would be equivalent to a SRv6 Path (represented as a list of SRv6
      segments) in the context of supporting SRv6 in PCEP.</t>
    </section>

    <!-- Terminology -->

    <section anchor="Overview"
             title="Overview of PCEP Operation in SRv6 Networks">
      <t>Basic operations for PCEP speakers is as per <xref
      target="RFC8664"/>. SRv6 Paths computed by a PCE can be represented as
      an ordered list of SRv6 segments of 128-bit value.</t>

      <t><xref target="RFC8664"/> defined a new Explicit Route Object (ERO)
      subobject denoted by "SR-ERO subobject" capable of carrying a SID as
      well as the identity of the node/adjacency represented by the SID for SR-MPLS.
      SR-capable PCEP speakers should be able to generate and/or process such an
      ERO subobject. An ERO containing SR-ERO subobjects can be included in
      the PCEP Path Computation Reply (PCRep) message defined in <xref
      target="RFC5440"/>, the PCEP LSP Initiate Request message (PCInitiate)
      defined in <xref target="RFC8281"/>, as well as in the PCEP LSP Update
      Request (PCUpd) and PCEP LSP State Report (PCRpt) messages defined in
      defined in <xref target="RFC8231"/>.</t>

      <t>This document define new subobjects "SRv6-ERO" and "SRv6-RRO" in the ERO
      and the RRO respectively to carry the SRv6 SID (IPv6 Address). SRv6-capable PCEP
      speakers MUST be able to generate and/or process these subobjects.</t>

      <t>When a PCEP session between a PCC and a PCE is established, both PCEP
      speakers exchange their capabilities to indicate their ability to
      support SRv6 specific functionality as described in <xref target="SRv6-PCE-Capability-sub-TLV"/>.</t>

      <t>In summary, this document:<list style="symbols">
          <t>Defines a new PCEP capability for SRv6.</t>

          <t>Defines a new subobject SRv6-ERO in ERO.</t>

          <t>Defines a new subobject SRv6-RRO in RRO.</t>

          <t>Defines a new path setup type (PST) <xref target="RFC8408"/> carried in the PATH-SETUP-TYPE TLV and the PATH-SETUP-TYPE-CAPABILITY TLV.</t>
        </list></t>

      <section anchor="Operation-overview" title="Operation Overview">
        <t>In SR networks, an ingress node of an SR path appends all outgoing
        packets with an SR header consisting of a list of SIDs (IPv6 Prefix in
        case of SRv6). The header has all necessary information to guide the
        packets from the ingress node to the egress node of the path, and
        hence there is no need for any signaling protocol.</t>

        <t>For the use of IPv6 in control plane only with MPLS data plane, mechanism remains the same as specified in <xref target="RFC8664"/>.</t>

        <t>This document describes an extension to the SR path for the IPv6 data plane.
        SRv6 Path (i.e. ERO) consists of an ordered set of SRv6 SIDs (see
        details in <xref target="SRv6-ERO-Subobject-Format"/>).</t>

        <t>A PCC or PCE indicates its ability to support SRv6 during the PCEP
        session Initialization Phase via a new SRv6-PCE-CAPABILITY sub-TLV
        (see details in <xref target="SRv6-PCE-Capability-sub-TLV"/>).</t>
      </section>

      <!-- Operation Overview -->

      <section anchor="SRv6-Specific-PCEP-Message-Extensions"
               title="SRv6-Specific PCEP Message Extensions">
        <t>As defined in <xref target="RFC5440"/>, a PCEP message consists of
        a common header followed by a variable length body made up of
        mandatory and/or optional objects. This document does not require any
        changes in the format of PCReq and PCRep messages specified in <xref
        target="RFC5440"/>, PCInitiate message specified in <xref
        target="RFC8281"/>, and PCRpt and PCUpd messages specified in <xref
        target="RFC8231"/>. However, PCEP messages pertaining to SRv6 MUST
        include PATH-SETUP-TYPE TLV in the RP or SRP object to clearly
        identify that SRv6 is intended. <!--In other words, a PCEP speaker MUST NOT infer whether or
   not a PCEP message pertains to SRv6 from any other object or
   TLV.--></t>
      </section>
    </section>

    <!-- Overview -->

    <section anchor="Object-Formats" title="Object Formats">
      <section anchor="The-OPEN-Object" title="The OPEN Object">
        <!--<t>This document defines a new optional TLV for use in the OPEN Object.</t>-->

        <section anchor="SRv6-PCE-Capability-sub-TLV"
                 title="The SRv6 PCE Capability sub-TLV">
          <t>This document defines a new Path Setup Type (PST) <xref
          target="RFC8408"/> for SRv6, as follows:<list style="symbols">
              <t>PST = 3 (early allocated by IANA): Path is setup using SRv6.</t>
            </list></t>

          <t>A PCEP speaker MUST indicate its support of the function
          described in this document by sending a PATH-SETUP-TYPE-CAPABILITY
          TLV in the OPEN object with this new PST "3" included in the PST
          list.</t>

          <t>This document also defines the SRv6-PCE-CAPABILITY sub-TLV. PCEP
          speakers use this sub-TLV to exchange information about their SRv6
          capability. If a PCEP speaker includes PST=3 (early allocated by IANA) in the PST List of
          the PATH-SETUP-TYPE-CAPABILITY TLV then it MUST also include the
          SRv6-PCE-CAPABILITY sub-TLV inside the PATH-SETUP-TYPE-CAPABILITY
          TLV.</t>

          <t>The format of the SRv6-PCE-CAPABILITY sub-TLV is shown in the
          following figure:</t>

          <figure anchor="SRv6-PCE-CAPABILITY-sub-TLV-format"
                  title="SRv6-PCE-CAPABILITY sub-TLV format">
            <artwork><![CDATA[

 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Type=27            |            Length             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Reserved           |             Flags         |N|X|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   MSD-Type    | MSD-Value     |   MSD-Type    | MSD-Value     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//                             ...                             //
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   MSD-Type    | MSD-Value     |           Padding             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


]]></artwork>
          </figure>

          <t>The code point for the TLV type is 27 (early allocated by IANA).
          The TLV length is variable.</t>

          <t>The value comprises of - <list>
              <t>Reserved: 2 octet, this field MUST be set to 0 on
              transmission, and ignored on receipt.</t>

              <t>Flags: 2 octet, two bits are currently assigned in this
              document. <list>
                  <t>N bit: A PCC sets this flag bit to 1 to indicate that it
                  is capable of resolving a Node or Adjacency Identifier (NAI)
                  to a SRv6-SID.</t>

                  <t>X bit: A PCC sets this bit to 1 to indicate that it does
                  not impose any limit on MSD (irrespective of the
                  MSD-Type).</t>

                  <t>Unassigned bits MUST be set to 0 and ignored on
                  receipt.</t>
                </list></t>

              <t>A pair of (MSD-Type, MSD-Value): Where MSD-Type (1 octet) is
              as per the IGP MSD Type registry created by <xref
              target="RFC8491"/> and populated with SRv6 MSD types as per
              <xref target="I-D.ietf-lsr-isis-srv6-extensions"/>; MSD-Value (1
              octet) is as per <xref target="RFC8491"/>.</t>
            </list></t>

          <t>This sub-TLV format is compliant with the PCEP TLV format defined
          in <xref target="RFC5440"/>. That is, the sub-TLV is composed of 2
          octets for the type, 2 octets specifying the length, and a Value
          field. The Type field when set to 27 (early allocated by IANA) identifies the
          SRv6-PCE-CAPABILITY sub-TLV and the presence of the sub-TLV
          indicates the support for the SRv6 paths in PCEP. The Length field
          defines the length of the value portion in octets. The TLV is padded
          to 4-octet alignment, and padding is not included in the Length
          field. The number of (MSD-Type,MSD-Value) pairs can be determined
          from the Length field of the TLV.</t>

          <!--<t>The 32-bit value is formatted as follows. The "Maximum
          SID Depth" (1 octet) field (MSD) specifies the maximum
          number of SIDs a PCC is capable of imposing as MPLS
          labels. The "SRH MSD" (2 octets) field (SRH MSD)
          specifies the maximum number of SIDs a PCC is capable of
          imposing as next headers in SRH. "Flags" field is 1
          octet long, and this document defines the following
          flag:</t>
          <t>o L-flag: A PCC sets this flag to 1 to indicate that
          it does not impose any limit on MSD.</t>-->

          <!--<t>[Editor's Note - draft-bashandy-isis-srv6-extensions defines other fields like Max-End-Pop-SRH, Max-T-Ins-SRH, Max-T-Encap-SRH, max-End-D-SRH - should we follow the same?]</t>-->
        </section>

        <!-- SR PCE Capability TLV -->
      </section>

      <!-- The OPEN Object -->

      <section anchor="The-SRP-Object" title="The RP/SRP Object">
        <t>In order to indicate the SRv6 path, RP or SRP object MUST include
        the PATH-SETUP-TYPE TLV specified in <xref target="RFC8408"/>. This
        document defines a new Path Setup Type (PST=3 (early allocated by IANA)) for SRv6.</t>

        <t>The LSP-IDENTIFIERS TLV MAY be present for the above PST type.</t>
      </section>

      <!-- The SRP Object -->

      <section anchor="ERO" title="ERO">
        <t>In order to support SRv6, new subobject "SRv6-ERO" is defined in
        ERO.</t>

        <section anchor="SRv6-ERO-Subobject" title="SRv6-ERO Subobject">
          <t>An SRv6-ERO subobject is formatted as shown in the following
          figure.</t>

          <figure anchor="SRv6-ERO-Subobject-Format"
                  title="SRv6-ERO Subobject Format">
            <artwork><![CDATA[

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |L|   Type=40   |     Length    | NT    |     Flags     |V|T|F|S|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |              Reserved         |      Endpoint Behavior        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                      SRv6 SID (optional)                      |
   |                     (128-bit)                                 |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   //                    NAI (variable, optional)                 //
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     SID Structure (optional)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>
          </figure>

          <!--<t>A following new flag is added:</t>
      <t>* I: When this bit is set, the SR-ERO sub-object represents a SRv6 segment.</t>-->

          <t>The fields in the SRv6-ERO subobject are as follows:</t>

          <t>The 'L' Flag: Indicates whether the subobject represents a
          loose-hop (see <xref target="RFC3209"/>). If this flag is set to
          zero, a PCC MUST NOT overwrite the SID value present in the SRv6-ERO
          subobject. Otherwise, a PCC MAY expand or replace one or more SID
          values in the received SRv6-ERO based on its local policy.</t>

          <t>Type: indicates the content of the subobject, i.e. when the field
          is set to 40 (early allocated by IANA), the suboject is a SRv6-ERO subobject representing a SRv6 SID.</t>

          <t>Length: Contains the total length of the subobject in octets. The
          Length MUST be at least 24, and MUST be a multiple of 4. An SRv6-ERO
          subobject MUST contain at least one of a SRv6-SID or an NAI. The S
          and F bit in the Flags field indicates whether the SRv6-SID or NAI
          fields are absent.</t>

          <t>NAI Type (NT): Indicates the type and format of the NAI contained
          in the object body, if any is present. If the F bit is set to one
          (see below) then the NT field has no meaning and MUST be ignored by
          the receiver. This document reuses NT types defined in <xref
          target="RFC8664"/>: <list>
              <t>If NT value is 0, the NAI MUST NOT be included.</t>

              <t>When NT value is 2, the NAI is as per the 'IPv6 Node ID'
              format defined in <xref target="RFC8664"/>, which specifies an
              IPv6 address. This is used to identify the owner of the SRv6
              Identifier. This is optional, as the LOC (the locater portion)
              of the SRv6 SID serves a similar purpose (when present).</t>

              <t>When NT value is 4, the NAI is as per the 'IPv6 Adjacency'
              format defined in <xref target="RFC8664"/>, which specify a pair
              of IPv6 addresses. This is used to identify the IPv6 Adjacency
              and used with the SRv6 Adj-SID.</t>

              <t>When NT value is 6, the NAI is as per the 'link-local IPv6
              addresses' format defined in <xref target="RFC8664"/>, which
              specify a pair of (global IPv6 address, interface ID) tuples. It
              is used to identify the IPv6 Adjacency and used with the SRv6
              Adj-SID.</t>

              <t>SR-MPLS specific NT types are not valid in SRv6-ERO.</t>
            </list></t>

          <t>Flags: Used to carry additional information pertaining to the
          SRv6-SID. This document defines the following flag bits. The other
          bits MUST be set to zero by the sender and MUST be ignored by the
          receiver. <list style="symbols">
              <t>S: When this bit is set to 1, the SRv6-SID value in the
              subobject body is absent. In this case, the PCC is responsible
              for choosing the SRv6-SID value, e.g., by looking up in the
              SR-DB using the NAI which, in this case, MUST be present in the
              subobject. If the S bit is set to 1 then F bit MUST be set to
              zero.</t>

              <t>F: When this bit is set to 1, the NAI value in the subobject
              body is absent. The F bit MUST be set to 1 if NT=0, and
              otherwise MUST be set to zero. The S and F bits MUST NOT both be
              set to 1.</t>

              <t>T: When this bit is set to 1, the SID Structure value in the
              subobject body is present. The T bit MUST be set to 0 when S bit
              is set to 1. If the T bit is set when the S bit is set, the T
              bit MUST be ignored. Thus, the T bit indicates the presence of
              an optional 8-byte SID Structure when SRv6 SID is included. The
              SID Structure is defined in <xref target="SID-Structure"/>.</t>

              <t>V: The "SID verification" bit usage is as per Section 5.1 of
              <xref target="RFC9256"/>.</t>
            </list></t>

          <t/>

          <t>Reserved: MUST be set to zero while sending and ignored on
          receipt.</t>

          <t>Endpoint Behavior: A 16-bit field representing the behavior
          associated with the SRv6 SIDs. This information is optional and
          plays no role in the fields in SRH imposed on the packet. It could
          be used for maintainability and diagnostic purpose. If behavior is
          not known, the value '0' is used. The list of Endpoint behaviors are defined in
          <xref target="RFC8986"/>.</t>

          <t>SRv6 SID: SRv6 Identifier is an 128-bit IPv6 addresses
          representing the SRv6 segment.</t>

          <t>NAI: The NAI associated with the SRv6-SID. The NAI's format
          depends on the value in the NT field, and is described in <xref
          target="RFC8664"/>.</t>

          <t>At least one of the SRv6-SID or the NAI MUST be included in the
          SRv6-ERO subobject, and both MAY be included.</t>

          <section anchor="SID-Structure" title="SID Structure">

            <t>The SID Structure is an optional part of the SR-ERO subobject,
            as described in <xref target="SRv6-ERO-Subobject"/>. </t>

<t><xref target="RFC8986"/> defines an SRv6 SID as consisting of LOC:FUNCT:ARG,
      where a locator (LOC) is encoded in the L most significant bits of
      the SID, followed by F bits of function (FUNCT) and A bits of
      arguments (ARG).  A locator may be represented as B:N where B is
      the SRv6 SID locator block (IPv6 prefix allocated for SRv6 SIDs by
      the operator) and N is the identifier of the parent node
      instantiating the SID called locator node.</t>

            <t>It is
            formatted as shown in the following figure.</t>

            <figure anchor="SID-Structure-Format" title="SID Structure Format">
              <artwork><![CDATA[

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |    LB Length  |  LN Length    | Fun. Length   |  Arg. Length  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 Reserved                      |   Flags       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


]]></artwork>
            </figure>

            <t>where:</t>

            <t>LB Length: 1 octet. SRv6 SID Locator Block length in bits.</t>

            <t>LN Length: 1 octet. SRv6 SID Locator Node length in bits.</t>

            <t>Fun. Length: 1 octet. SRv6 SID Function length in bits.</t>

            <t>Arg. Length: 1 octet. SRv6 SID Arguments length in bits.</t>

            <t>The sum of all four sizes in the SID Structure must be lower or
            equal to 128 bits. If the sum of all four sizes advertised in the
            SID Structure is larger than 128 bits, the corresponding SRv6 SID
            MUST be considered invalid and a PCErr message with Error-Type =
            10 ("Reception of an invalid object") and Error-Value = 37 (early allocated by IANA) ("Invalid SRv6 SID Structure") is returned.</t>

            <t>Reserved: MUST be set to zero while sending and ignored on
            receipt.</t>

            <t>Flags: Currently no flags are defined. Unassigned bits must be
            set to zero while sending and ignored on receipt.</t>

            <t>The SRv6 SID Structure provides the detailed encoding
            information of an SRv6 SID, which is useful in the use cases that
            require to know the SRv6 SID structure. When a PCEP speaker
            receives the SRv6 SID and its structure information, the SRv6 SID
            can be parsed based on the SRv6 SID Structure and/or possible
            local policies. The SRv6 SID Structure could be used by the PCE for ease of
   operations and monitoring.  For example, this information could be
   used for validation of SRv6 SIDs being instantiated in the network
   and checked for conformance to the SRv6 SID allocation scheme chosen
   by the operator as described in Section 3.2 of <xref target="RFC8986"/>.  In the
   future, PCE could also be used for verification and the automation
   for securing the SRv6 domain by provisioning filtering rules at SR
   domain boundaries as described in Section 5 of <xref target="RFC8754"/>.  The
   details of these potential applications are outside the scope of this
   document.</t>


            <!-- SID Structure -->
          </section>
          <section anchor="order" title="Order of the Optional fields">
            <t>The optional elements in the SRv6-ERO subobject i.e. SRv6 SID, NAI and the SID Structure MUST be encoded in the order as depicted in <xref target="SRv6-ERO-Subobject-Format"/>. The presence of each of them is indicated by the respective flags i.e. S flag, F flag and T flag.</t>
            <t>To allow for future compatibility, any optional element added to the SRv6-ERO subobject in future MUST specify the order of the optional element and request IANA to allocate a flag to indicate its presence from the subregistry created in <xref target="SRv6-ERO-flag"/>.</t>
          </section>
        </section>

        <!-- SRIPv6-ERO Subobject Format -->
      </section>

      <!-- ERO -->

      <section anchor="RRO" title="RRO">
        <t>In order to support SRv6, new subobject "SRv6-RRO" is defined in
        RRO.</t>

        <section anchor="SRv6-RRO-Subobject" title="SRv6-RRO Subobject">
          <t>A PCC reports an SRv6 path to a PCE by sending a PCRpt message,
          per <xref target="RFC8231"/>. The RRO on this message represents the
          SID list that was applied by the PCC, that is, the actual path
          taken. The procedures of <xref target="RFC8664"/> with respect to
          the RRO apply equally to this specification without change.</t>

          <t>An RRO contains one or more subobjects called "SRv6-RRO
          subobjects" whose format is shown below:</t>

          <figure anchor="SRv6-RRO-Subobject-Format"
                  title="SRv6-RRO Subobject Format">
            <artwork><![CDATA[

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Type=40     |     Length    |  NT   |     Flags     |V|T|F|S|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |              Reserved         |      Endpoint Behavior        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                      SRv6 SID                                 |
   |                     (128-bit)                                 |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   //                    NAI (variable)                           //
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     SID Structure (optional)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>
          </figure>

          <t>The format of the SRv6-RRO subobject is the same as that of the
          SRv6-ERO subobject, but without the L flag.</t>

          <t>The V flag has no meaning in the SRv6-RRO and is ignored on
          receipt at the PCE.</t>

          <t>Ordering of SRv6-RRO subobjects by PCC in PCRpt message remains
          as per <xref target="RFC8664"/>.</t>
          <t>The ordering of optional elements in the SRv6-RRO subobject as same as described in <xref target="order"/>.</t>
        </section>

        <!-- SRv6-RRO Subobject -->
      </section>

      <!-- RRO -->
    </section>

    <!-- Object Formats -->

    <!--<section anchor="Backward-Compatibility"
             title="Backward Compatibility">
      <t>A PCEP speaker that does not support the SR PCEP
      capability cannot recognize the SR-ERO or SR-RRO subobjects
      with new (I) flag MUST send a PCEP error with Error-Type = 4
      (Not supported object) and Error-Value = 2 (Not supported
      object Type) as per [RFC5440].</t>
    </section>-->

    <!-- Backward Compatibility -->

    <section anchor="Procedures" title="Procedures">
      <section anchor="Exchanging-SRv6-Capability"
               title="Exchanging the SRv6 Capability">
        <t>A PCC indicates that it is capable of supporting the head-end
        functions for SRv6 by including the SRv6-PCE-CAPABILITY sub-TLV in the
        Open message that it sends to a PCE. A PCE indicates that it is
        capable of computing SRv6 paths by including the SRv6-PCE-CAPABILITY
        sub-TLV in the Open message that it sends to a PCC.</t>

        <t>If a PCEP speaker receives a PATH-SETUP-TYPE-CAPABILITY TLV with a
        PST list containing PST=3 (early allocated by IANA), but the SRv6-PCE-CAPABILITY sub-TLV is
        absent, then the PCEP speaker MUST send a PCErr message with Error-
        Type = 10 (Reception of an invalid object) and Error-Value = 34 (early allocated by IANA) (Missing PCE-SRv6-CAPABILITY sub-TLV) and MUST then
        close the PCEP session. If a PCEP speaker receives a PATH-SETUP-
        TYPE-CAPABILITY TLV with a SRv6-PCE-CAPABILITY sub-TLV, but the PST
        list does not contain PST=3 (early allocated by IANA), then the PCEP speaker MUST ignore the
        SRv6-PCE-CAPABILITY sub-TLV.</t>

        <t>The number of SRv6 SIDs that can be imposed on a packet depends on
        the PCC's IPv6 data plane's capability. If a PCC sets the X flag to 1
        then the MSD is not used and MUST NOT be included. If a PCE receives
        an SRv6-PCE-CAPABILITY sub-TLV with the X flag set to 1 then it MUST
        ignore any MSD-Type, MSD-Value fields and MUST assume that the sender
        can impose any length of SRH. If a PCC sets the X flag to zero, then
        it sets the SRv6 MSD-Type, MSD-Value fields that it can impose on a
        packet. If a PCE receives an SRv6-PCE-CAPABILITY sub-TLV with the X
        flag as set, and SRv6 MSD-Type or MSD-Value fields are set to zero then it is
        considered as an error and the PCE MUST respond with a PCErr message
        (Error-Type = 1 "PCEP session establishment failure" and Error-Value = 1
        "reception of an invalid Open message or a non Open message."). In
        case the MSD-Type in SRv6-PCE-CAPABILITY sub-TLV received by the PCE
        does not correspond to one of the SRv6 MSD types, the PCE MUST respond
        with a PCErr message (Error-Type = 1 "PCEP session establishment
        failure" and Error-Value = 1 "reception of an invalid Open message or a
        non Open message.").</t>

        <t>Note that the MSD-Type, MSD-Value exchanged via the
        SRv6-PCE-CAPABILITY sub-TLV indicates the SRv6 SID imposition limit
        for the PCC node. However, if a PCE learns these via different means,
        e.g routing protocols, as specified in: <xref
        target="I-D.ietf-lsr-ospfv3-srv6-extensions"/>; <xref
        target="I-D.ietf-lsr-isis-srv6-extensions"/>; <xref
        target="I-D.ietf-idr-bgpls-srv6-ext"/>, then it ignores the values in
        the SRv6-PCE-CAPABILITY sub-TLV. Furthermore, whenever a PCE learns
        the other advanced SRv6 MSD via different means, it MUST use that
        value regardless of the values exchanged in the SRv6-PCE-CAPABILITY
        sub-TLV.</t>

        <t>Once an SRv6-capable PCEP session is established with a non-zero
        SRv6 MSD value, the corresponding PCE MUST NOT send SRv6 paths with a
        number of SIDs exceeding that SRv6 MSD value (based on the SRv6 MSD
        Type). If a PCC needs to modify the SRv6 MSD value, it MUST close the
        PCEP session and re-establish it with the new value. If a PCEP session
        is established with a non-zero SRv6 MSD value, and the PCC receives an
        SRv6 path containing more SIDs than specified in the SRv6 MSD value
        (based on the SRv6 MSD type), the PCC MUST send a PCErr message with
        Error-Type = 10 (Reception of an invalid object) and Error-Value = TBD1
        (Unsupported number of SRv6-ERO subobjects). If a PCEP session is
        established with an SRv6 MSD value of zero, then the PCC MAY specify
        an SRv6 MSD for each path computation request that it sends to the
        PCE, by including a "maximum SID depth" metric object on the request
        similar to <xref target="RFC8664"/>.</t>

        <t>The N flag, X flag and (MSD-Type,MSD-Value) pair inside the
        SRv6-PCE-CAPABILITY sub-TLV are meaningful only in the Open message
        sent from a PCC to a PCE. As such, a PCE MUST set the flags to zero
        and not include any (MSD-Type,MSD-Value) pair in the
        SRv6-PCE-CAPABILITY sub-TLV in an outbound message to a PCC.
        Similarly, a PCC MUST ignore N,X flag and any (MSD-Type,MSD-Value)
        pair received from a PCE. If a PCE receives multiple
        SRv6-PCE-CAPABILITY sub-TLVs in an Open message, it processes only the
        first sub-TLV received.</t>
      </section>

      <!-- Exchanging the SRv6 Capability -->

      <section anchor="ERO-Processing" title="ERO Processing">
        <t>The ERO processing remains as per <xref target="RFC5440"/> and
        <xref target="RFC8664"/>.</t>

        <section title="SRv6 ERO Validation ">
          <t>If a PCC does not support the SRv6 PCE Capability and thus cannot
          recognize the SRv6-ERO or SRv6-RRO subobjects, it will respond
          according to the rules for a malformed object per <xref
          target="RFC5440"/>.</t>

          <t>On receiving an SRv6-ERO, a PCC MUST validate that the Length
          field, the S bit, the F bit, the T bit, and the NT field are
          consistent, as follows.<list style="symbols">
              <t>If NT=0, the F bit MUST be 1, the S bit MUST be zero and the
              Length MUST be 24.</t>

              <t>If NT=2, the F bit MUST be zero. If the S bit is 1, the
              Length MUST be 24, otherwise the Length MUST be 40.</t>

              <t>If NT=4, the F bit MUST be zero. If the S bit is 1, the
              Length MUST be 40, otherwise the Length MUST be 56.</t>

              <t>If NT=6, the F bit MUST be zero. If the S bit is 1, the
              Length MUST be 48, otherwise the Length MUST be 64.</t>

              <t>NT types (1,3, and 5) are not valid for SRv6.</t>

              <t>If T bit is 1, then S bit MUST be zero.</t>
            </list></t>

          <t>If a PCC finds that the NT field, Length field, S bit, F bit, and
          T bit are not consistent, it MUST consider the entire ERO invalid
          and MUST send a PCErr message with Error-Type = 10 ("Reception of an
          invalid object") and Error-Value = 11 ("Malformed object").</t>

          <t>If a PCC does not recognize or support the value in the NT field, it
   MUST consider the entire ERO invalid and MUST send a PCErr message
   with Error-Type = 10 ("Reception of an invalid object") and Error-
   value = TBD2 ("Unsupported NAI Type in the SRv6-ERO/SRv6-RRO subobject").</t>

          <t>If a PCC receives an SRv6-ERO subobject in which the S and F bits are
   both set to 1 (that is, both the SID and NAI are absent), it MUST
   consider the entire ERO invalid and send a PCErr message with Error-
   Type = 10 ("Reception of an invalid object") and Error-value = TBD3
   ("Both SID and NAI are absent in the SRv6-ERO subobject").</t>

   <t>If a PCC receives an SRv6-ERO subobject in which the S bit is set to 1
   and the F bit is set to zero (that is, the SID is absent and the NAI
   is present), but the PCC does not support NAI resolution, it MUST
   consider the entire ERO invalid and send a PCErr message with Error-
   Type = 4 ("Not supported object") and Error-value = 4 ("Unsupported
   parameter").</t>

      <t>If a PCC detects that the subobjects of an ERO are a mixture of SRv6-
   ERO subobjects and subobjects of other types, then it MUST send a
   PCErr message with Error-Type = 10 ("Reception of an invalid object")
   and Error-value = TBD4 ("ERO mixes SRv6-ERO subobjects with other
   subobject types").</t>

          <t>In case a PCEP speaker receives the SRv6-ERO subobject, when the
          PST is not set to 3 (early allocated by IANA) or SRv6-PCE-CAPABILITY sub-TLV was not
          exchanged, it MUST send a PCErr message with Error-Type = 19
          ("Invalid Operation") and Error-Value = 19 (early allocated by IANA) ("Attempted SRv6 when
          the capability was not advertised").</t>

          <t>If a PCC receives a list of SRv6 segments, and the number of SRv6
          segments exceeds the SRv6 MSD that the PCC can impose on the packet
          (SRH), it MUST send a PCErr message with Error-Type = 10 ("Reception
          of an invalid object") and Error-Value = TBD5 ("Unsupported number of SRv6-ERO subobjects") as per <xref target="RFC8664"/>.</t>

        </section>

        <section title="Interpreting the SRv6-ERO">
          <t>The SRv6-ERO contains a sequence of subobjects. According to
          <xref target="RFC9256"/>, each
          SRv6-ERO subobject in the sequence identifies a segment that the
          traffic will be directed to, in the order given. That is, the first
          subobject identifies the first segment the traffic will be directed
          to, the second SRv6-ERO subobject represents the second segment, and
          so on.</t>

          <t>The PCC interprets the SRv6-ERO by converting it to an SRv6 SRH
          plus a next hop. The PCC sends packets along the segment routed path
          by prepending the SRH onto the packets and sending the resulting,
          modified packet to the next hop.</t>
        </section>
      </section>

      <!-- ERO Processing -->

      <section anchor="RRO-Processing" title="RRO Processing">
        <t>The syntax checking rules that apply to the SRv6-RRO subobject are
        identical to those of the SRv6-ERO subobject, except as noted
        below.</t>

        <t>If a PCEP speaker receives an SRv6-RRO subobject in which both SRv6
        SID and NAI are absent, it MUST consider the entire RRO invalid and
        send a PCErr message with Error-Type = 10 ("Reception of an invalid
        object") and Error-Value = 35 (early allocated by IANA) ("Both SID and NAI are absent in
        SRv6-RRO subobject").</t>

        <t>If a PCE detects that the subobjects of an RRO are a mixture of
        SRv6-RRO subobjects and subobjects of other types, then it MUST send a
        PCErr message with Error-Type = 10 ("Reception of an invalid object")
        and Error-Value = 36 (early allocated by IANA) ("RRO mixes SRv6-RRO subobjects with other
        subobject types").</t>
      </section>

      <!-- RRO Processing -->
    </section>

    <!-- Procedures -->

    <section anchor="Security-Considerations" title="Security Considerations">
      <t>The security considerations described in <xref target="RFC5440"/>,
      <xref target="RFC8231"/> and <xref target="RFC8281"/>, <xref
      target="RFC8664"/>, are applicable to this specification. No additional
      security measure is required.</t>
      <t>Note that this specification enables a network controller to
   instantiate an SRv6 path in the network.  This creates an additional
   vulnerability if the security mechanisms of <xref target="RFC5440"/>, <xref target="RFC8231"/>, and <xref target="RFC8281"/> are not used.  If there is no integrity protection on the
   session, then an attacker could create an SRv6 path that may not subjected
   to the further verification checks. Further, the MSD field in the Open message
   could disclose node forwarding capabilities if suitable security mechanisms
   are not in place.</t>
    </section>

    <section anchor="Manage" title="Manageability Considerations">
      <t>All manageability requirements and considerations listed in <xref
      target="RFC5440"/>, <xref target="RFC8231"/>, <xref target="RFC8281"/>, and <xref
      target="RFC8664"/> apply to PCEP protocol extensions defined in this
      document. In addition, requirements and considerations listed in this
      section apply.</t>

      <t/>

      <section title="Control of Function and Policy">
        <t>A PCEP implementation SHOULD allow the operator to configure the SRv6 capability. Further a policy to accept NAI only for the SRv6 SHOULD be allowed to set.</t>
      </section>

      <section title="Information and Data Models">
        <t>The PCEP YANG module is defined in <xref
        target="I-D.ietf-pce-pcep-yang"/>. An augmented YANG module for SRv6 is
        specified in <xref target="I-D.li-pce-pcep-srv6-yang"/> that allows for SRv6 capability and MSD configurations as well as to monitor the SRv6 paths set in the network.</t>
      </section>

      <section title="Liveness Detection and Monitoring">
        <t>Mechanisms defined in this document do not imply any new liveness
        detection and monitoring requirements in addition to those already
        listed in <xref target="RFC5440"/>.</t>
      </section>

      <section title="Verify Correct Operations">
        <t>Mechanisms defined in this document do not imply any new operation
        verification requirements in addition to those already listed in <xref
        target="RFC5440"/>, <xref target="RFC8231"/>, and <xref
        target="RFC8664"/>.</t>
      </section>

      <section title="Requirements On Other Protocols">
        <t>Mechanisms defined in this document do not imply any new
        requirements on other protocols.</t>
      </section>

      <section title="Impact On Network Operations">
        <t>Mechanisms defined in <xref target="RFC5440"/>, <xref
        target="RFC8231"/>, and <xref target="RFC8664"/> also apply to PCEP
        extensions defined in this document.</t>
      </section>
    </section>

    <section title="Implementation Status">
      <t>[Note to the RFC Editor - remove this section before publication, as
      well as remove the reference to <xref target="RFC7942"/>.</t>

      <t>This section records the status of known implementations of the
      protocol defined by this specification at the time of posting of this
      Internet-Draft, and is based on a proposal described in <xref
      target="RFC7942"/>. The description of implementations in this section
      is intended to assist the IETF in its decision processes in progressing
      drafts to RFCs. Please note that the listing of any individual
      implementation here does not imply endorsement by the IETF. Furthermore,
      no effort has been spent to verify the information presented here that
      was supplied by IETF contributors. This is not intended as, and must not
      be construed to be, a catalog of available implementations or their
      features. Readers are advised to note that other implementations may
      exist.</t>

      <t>According to <xref target="RFC7942"/>, "this will allow reviewers and
      working groups to assign due consideration to documents that have the
      benefit of running code, which may serve as evidence of valuable
      experimentation and feedback that have made the implemented protocols
      more mature. It is up to the individual working groups to use this
      information as they see fit".</t>

      <t/>

      <section title="Cisco's Commercial Delivery">
        <t><list style="symbols">
            <t>Organization: Cisco Systems, Inc.</t>

            <t>Implementation: IOS-XR PCE and PCC.</t>

            <t>Description: Implementation with experimental codepoints.</t>

            <t>Maturity Level: Production</t>

            <t>Coverage: Partial</t>

            <t>Contact: ssidor@cisco.com</t>
          </list></t>
      </section>
    </section>

    <!-- Security Considerations -->

    <section anchor="IANA-Considerations" title="IANA Considerations">
      <section anchor="PCEP-ERO-and-RRO-subobjects"
               title="PCEP ERO and RRO subobjects">
        <t>This document defines a new subobject type for the PCEP explicit
        route object (ERO), and a new subobject type for the PCEP record route
        object (RRO). The code points for subobject types of these objects is
        maintained in the RSVP parameters registry, under the EXPLICIT_ROUTE
        and ROUTE_RECORD objects. IANA is requested to confirm
   the following early allocations in
        the RSVP Parameters registry for each of the new subobject types
        defined in this document.</t>

        <figure>
          <artwork><![CDATA[

  Object                Subobject                  Subobject Type
  --------------------- -------------------------- ------------------
  EXPLICIT_ROUTE        SRv6-ERO (PCEP-specific)     40
  ROUTE_RECORD          SRv6-RRO (PCEP-specific)     40

]]></artwork>
        </figure>
      </section>

      <!-- PCEP ERO and RRO subobjects -->

      <section anchor="SRv6-ERO-flag" title="New SRv6-ERO Flag Registry">
        <t>IANA is requested to create a new sub-registry, named "SRv6-ERO
        Flag Field", within the "Path Computation Element Protocol (PCEP)
        Numbers" registry to manage the Flag field of the SRv6-ERO subobject.
        New values are to be assigned by Standards Action <xref
        target="RFC8126"/>. Each bit should be tracked with the following
        qualities:<list style="symbols">
            <t>Bit number (counting from bit 0 as the most significant
            bit)</t>

            <t>Capability description</t>

            <t>Defining RFC</t>
          </list></t>

        <t>The following values are defined in this document:</t>

        <figure>
          <artwork><![CDATA[

                Bit     Description            Reference
                -----   ------------------     --------------
                 0-7      Unassigned
                   8      SID Verification (V)  This document
                   9      SID Structure is      This document
                          present (T)
                  10      NAI is absent (F)     This document
                  11      SID is absent (S)     This document

]]></artwork>
        </figure>
      </section>

      <section anchor="sub-TLV-Type-Indicators"
               title="PATH-SETUP-TYPE-CAPABILITY Sub-TLV Type Indicators">
        <t>IANA maintains a sub-registry, named "PATH-SETUP-TYPE-CAPABILITY
        Sub-TLV Type Indicators", within the "Path Computation Element
        Protocol (PCEP) Numbers" registry to manage the type indicator space
        for sub-TLVs of the PATH-SETUP-TYPE-CAPABILITY TLV. IANA is requested to confirm the following early allocations in the sub-registry:</t>

        <figure>
          <artwork><![CDATA[
   Value     Meaning                     Reference
   -----     -------                     ---------
   27        SRv6-PCE-CAPABILITY         This Document
   ]]></artwork>
        </figure>
      </section>

      <section anchor="SRv6-PCE-Capability-Flags"
               title="SRv6 PCE Capability Flags">
        <t>IANA is requested to create a new sub-registry, named "SRv6
        Capability Flag Field", within the "Path Computation Element Protocol
        (PCEP) Numbers" registry to manage the Flag field of the
        SRv6-PCE-CAPABILITY sub-TLV. New values are to be assigned by
        Standards Action <xref target="RFC8126"/>. Each bit should be tracked
        with the following qualities:<list style="symbols">
            <t>Bit number (counting from bit 0 as the most significant
            bit)</t>

            <t>Capability description</t>

            <t>Defining RFC</t>
          </list></t>

        <t>The following values are defined in this document:</t>

        <figure>
          <artwork><![CDATA[
                 Bit     Description           Reference

                 0-13    Unassigned
                  14     Node or Adjacency     This document
                         Identifier (NAI) is
                         supported (N)
                  15     Unlimited Maximum SID This document
                         Depth (X)
]]></artwork>
        </figure>
      </section>

      <!-- TLV Type Indicators -->

      <section anchor="New-Path-Setup-Type" title="New Path Setup Type">
        <t><xref target="RFC8408"/> created a sub-registry within the "Path
        Computation Element Protocol (PCEP) Numbers" registry called "PCEP
        Path Setup Types". IANA is requested to confirm the following early allocations in the sub-registry:</t>

        <figure>
          <artwork><![CDATA[

Value             Description                  Reference
-----             -----------                  ---------
3                 Traffic engineering path is  This Document
                  setup using SRv6.

]]></artwork>
        </figure>
      </section>

      <!-- New Path Setup Type -->

      <section anchor="ERROR-Objects" title="ERROR Objects">
        <t>IANA is requested to confirm the following early allocations in the PCEP-ERROR Object
        Error Types and Values registry for the following new
        error-values:</t>

        <figure>
          <artwork><![CDATA[

   Error-Type   Meaning
   ----------   -------
   10           Reception of an invalid object
                Error-value = 34 (Missing
                PCE-SRv6-CAPABILITY sub-TLV)
                Error-value = 35 (Both SID and NAI are absent
                in SRv6-RRO subobject)
                Error-value = 36 (RRO mixes SRv6-RRO subobjects
                with other subobject types)
                Error-value = 37 (Invalid SRv6 SID Structure)
   19           Invalid Operation
                Error-value = 19 (Attempted SRv6 when the
                capability was not advertised)

]]></artwork>
        </figure>
<t>IANA is requested to make a new allocations in the PCEP-ERROR Object
        Error Types and Values registry for the following new
        error-values:</t>

        <figure>
          <artwork><![CDATA[

   Error-Type   Meaning
   ----------   -------
   10           Reception of an invalid object
                Error-value = TBD1 (Unsupported number of
                SRv6-ERO subobjects)
                Error-value = TBD2 (Unsupported NAI Type
                in the SRv6-ERO/SRv6-RRO subobject)
                Error-value = TBD3 (Both SID and NAI are
                absent in the SRv6-ERO subobject)
                Error-value = TBD4 (ERO mixes SRv6-ERO
                subobjects with other subobject types)
                Error-value = TBD5 (Unsupported number
                of SRv6-ERO subobjects)


]]></artwork>
        </figure>
      </section>

      <!-- ERROR Objects -->
    </section>

    <!-- IANA Considerations -->

    <section title="Acknowledgements">
      <t>The authors would like to thank Jeff Tantsura, Adrian Farrel, Aijun
      Wang, Khasanov Boris, and Robert Varga for valuable suggestions.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.3209"?>

      <?rfc include="reference.RFC.5440"?>

      <?rfc include="reference.RFC.5511"?>

      <?rfc include="reference.RFC.8126"?>

      <?rfc include="reference.RFC.8174"?>

      <?rfc include="reference.RFC.8231"?>

      <?rfc include="reference.RFC.8281"?>

      <?rfc include="reference.RFC.8402"?>

      <?rfc include="reference.RFC.8408"?>

      <?rfc include="reference.RFC.8491"?>

      <?rfc include="reference.RFC.8664"?>

      <?rfc include="reference.RFC.8986"?>

      <?rfc include="reference.I-D.ietf-lsr-isis-srv6-extensions"?>


    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.4657"?>

      <?rfc include="reference.RFC.7942"?>

      <?rfc include="reference.RFC.7855"?>

      <?rfc include="reference.RFC.8051"?>

      <?rfc include="reference.RFC.8354"?>

      <?rfc include="reference.RFC.8666"?>

      <?rfc include="reference.RFC.8667"?>

      <?rfc include="reference.RFC.8754"?>

      <?rfc include="reference.RFC.9256"?>

      <?rfc include="reference.I-D.ietf-lsr-ospfv3-srv6-extensions"?>

      <?rfc include="reference.I-D.ietf-idr-bgpls-srv6-ext"?>

      <?rfc include="reference.I-D.ietf-pce-pcep-yang"?>

      <?rfc include="reference.I-D.li-pce-pcep-srv6-yang"?>
    </references>

    <section title="Contributor">
      <t>The following persons contributed to this document:</t>

      <figure>
        <artwork><![CDATA[
Dhruv Dhody
Huawei Technologies
Divyashree Techno Park, Whitefield
Bangalore, Karnataka  560066
India

EMail: dhruv.ietf@gmail.com

Huang Wumin
Huawei Technologies
Huawei Building, No. 156 Beiqing Rd.
Beijing  100095
China

Email: huangwumin@huawei.com

Shuping Peng
Huawei Technologies
Huawei Building, No. 156 Beiqing Rd.
Beijing  100095
China

Email: pengshuping@huawei.com

     ]]></artwork>
      </figure>
    </section>
  </back>
</rfc>
