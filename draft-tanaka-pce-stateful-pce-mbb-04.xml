<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY rfc3209 PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3209.xml'>
    <!ENTITY rfc4426 PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4426.xml'>
    <!ENTITY rfc4427 PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4427.xml'>
    <!ENTITY rfc5440 PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5440.xml'>
    <!ENTITY rfc7470 PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7470.xml'>
    <!ENTITY I-D.ietf-pce-stateful-pce PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-pce-stateful-pce.xml'>
    <!ENTITY I-D.ietf-pce-pce-initiated-lsp PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-pce-pce-initiated-lsp.xml'>
    <!ENTITY I-D.ietf-pce-association-group PUBLIC ''
        'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-pce-association-group.xml'>
]>

<rfc category="std" ipr="trust200902" docName="draft-tanaka-pce-stateful-pce-mbb-04">
	<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
	<?rfc toc="yes" ?>
	<?rfc symrefs="yes" ?>
	<?rfc sortrefs="yes"?>
	<?rfc iprnotified="no" ?>
	<?rfc strict="yes" ?>
	<?rfc comments="yes"?>
	<?rfc inline="yes"?>
	<?rfc compact='yes'?>
  <?rfc subcompact='yes'?>

	<front>
		<title abbrev="M-B-B procedure using Stateful PCE">
		 Make-Before-Break MPLS-TE LSP restoration and reoptimization procedure using Stateful PCE
		</title>
         <author initials='Y.T' surname="Tanaka" fullname='Yosuke Tanaka'>
                       <organization abbrev="NTT Communications">
                                     NTT Communications Corporation
                       </organization>
                       <address>
                                     <postal>
                                                   <street>1-1-6 Uchisaiwai-cho, Chiyoda-ku</street>
                                                   <region>Tokyo</region>
                                                   <code>100-8019</code>
                                                   <country>Japan</country>
                                     </postal>
                                     <email>yosuke.tanaka@ntt.com</email>
                       </address>
             </author>



		<author initials='Y.K' surname="Kamite" fullname='Yuji Kamite'>
			<organization abbrev="NTT Communications">
				NTT Communications Corporation
			</organization>
			<address>
				<postal>
					<street>Granpark Tower</street>
					<street>3-4-1 Shibaura, Minato-ku</street>
					<region>Tokyo</region>
					<code>108-8118</code>
					<country>Japan</country>
				</postal>
				<email>y.kamite@ntt.com</email>
			</address>
		</author>

		<author initials="D" surname="Dhody" fullname="Dhruv Dhody">
		      <organization>Huawei Technologies</organization>
		      <address>
			<postal>
			  <street>Divyashree Techno Park, Whitefield</street>
			  <city>Bangalore</city>
			  <region>Karnataka</region>
			  <code>560066</code>
			  <country>India</country>
			</postal>
			<email>dhruv.ietf@gmail.com</email>
		      </address>
		</author>

		<author initials="R" surname="Palleti" fullname="Ramanjaneya Reddy Palleti">
		      <organization>Huawei Technologies</organization>
		      <address>
			<postal>
			  <street>Divyashree Techno Park, Whitefield</street>
			  <city>Bangalore</city>
			  <region>Karnataka</region>
			  <code>560066</code>
			  <country>India</country>
			</postal>
			<email>ramanjaneya.palleti@huawei.com</email>
		      </address>
		</author>

    <date year="2017"/>
<area>Routing</area>
    <workgroup>PCE Working Group</workgroup>
		
		<abstract>
			<t>
                Stateful Path Computation Element (PCE) and its corresponding protocol extensions provide a mechanism that enables PCE to do stateful control of <!--Dhruv: expanded-->Multiprotocol Label Switching (MPLS) Traffic Engineering Label Switched Paths (TE LSP).  Stateful PCE supports manipulating of the existing LSP's state and attributes (e.g., bandwidth and path) via delegation and also instantiation of new LSPs in the network via PCE Initiation procedures.

            </t>
            <t>
                In the current MPLS TE network using <!--Dhruv--> Resource ReSerVation Protocol (RSVP-TE), LSPs are often controlled by Make-before-break (M-B-B) signaling by the headend for the purpose of LSP restoration and reoptimization. In most cases, it is an essential operation to reroute LSP traffic without any data disruption.
            </t>
            <t>
                This document specifies the procedure of applying stateful PCE's control to make-before-break RSVP-TE signaling.  In this document, two types of restoration/reoptimization procedures are defined, implicit mode and explicit mode.  This document also specifies the usage and handling of stateful PCEP (PCE Communication Protocol) messages, expected behavior of PCC as RSVP-TE headend and necessary extensions of additional PCEP objects.
                <!-- [Xian:2013/04/01] specified extensions of additional "PCEP" objects-->
			</t>
		</abstract>
	</front>


	<middle>
		<section title='Introduction'>
						<t>
						<xref target="RFC5440"/> describes the Path Computation Element Protocol PCEP.  PCEP enables the communication between a Path Computation Client (PCC) and a Path Control Element (PCE), or between PCE and PCE, for the purpose of computation of Multiprotocol Label Switching (MPLS) as well as Generalzied MPLS (GMPLS) for Traffic Engineering Label Switched Path (TE LSP) characteristics.
						</t>
            <t>
                <xref target="I-D.ietf-pce-stateful-pce"/> describes the stateful Path Computation Elements (PCE) and defines the extensions to PCEP to enable stateful control of LSPs within and across PCEP sessions, further it also describes mechanisms to effect LSP state synchronization between PCCs and PCEs, and PCE control of timing and sequence of path computations within and across PCEP sessions.
            </t>
            <!-- [Xian:2013/04/01] Stateful => stateful which not at the beginning of a sentence -->
            <t>
                <!-- [Tanaka:2013/07/07] Comment out for I-D.crabbe-pce-stateful-pce-protection expiration

                <xref target="I-D.crabbe-pce-stateful-pce-protection"/> describes the extensions for the setup and management of MPLS-TE LSP path protection by PCE.  This specification is focused on the control of protection path, making protection paths which are pre-signaled ahead of the failure or set up after the failure.  The proposed extension is beneficial for PCEs to place several active/standby LSPs for protection purposes in MPLS network.
                 [Ina:2013/02/28] act/standby to active standby -->
            </t>
            <t>
                Today, however, there is no detailed procedure specified for restoration and reoptimization of MPLS-TE LSP using stateful PCE.  In today's MPLS RSVP-TE mechanism, make-before-break (M-B-B) is a widely common scheme supported by headend Label Edge Router (LER) in order to assure no traffic disruption during restoration and reoptimization.  Hence it is naturally desirable for stateful PCE to control M-B-B based signaling and forwarding process.   
            </t>

            <t>
                This document specifies the definite procedures of applying stateful PCE's control of the M-B-B procedures.  In this document, two types of restoration/reoptimization procedures are defined, Implicit mode and Explicit mode.  This document also specifies the usage and handling of stateful PCEP (PCE Communication Protocol) messages, expected behavior of PCC as RSVP-TE headend and several extensions of additional objects.
            </t>
		</section>

		<section title="Conventions used in this document">
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
				"SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
				and "OPTIONAL" in this document are to be interpreted as
				described in RFC2119<xref target="RFC2119"/>.
			</t>
		</section>

		<section title="Terminology">
			<t>
                This document uses the following terms defined in <xref target="RFC5440"/>: PCC, PCE, PCEP Peer.
            </t>
            <t>
                This document uses the following terms defined in <xref target="RFC3209"/>: make-before-break (M-B-B), Path State Block (PSB).
            </t>
            <t>
                This document uses the following terms defined in <xref target="RFC4426"/> and <xref target="RFC4427"/>: recovery, protection, restoration. 
            </t>
            <t>
                 According to their definition the term "recovery" is generically used to denote both protection and restoration; the specific terms "protection" and "restoration" are used only when differentiation is required.  The subtle distinction between protection and restoration is made based on the resource allocation done during the recovery period.  Hence the protection allocates LSP resource in advance of a failure, while the restoration allocates LSP resource after a failure occur.
            </t>
<!--            <t>
                This document uses the following terms defined in <xref target="I-D.ietf-pce-stateful-pce"/>: Stateful PCE, Delegation, LSP State Request, LSP Update Request.
            </t>
            <t>
                This document uses the following terms defined in <xref target="I-D.crabbe-pce-stateful-pce-mpls-te"/>: LSP Identifiers TLV.
            </t>
            <t>
                This document uses the following terms defined in <xref target="I-D.crabbe-pce-pce-initiated-lsp"/>: LSP Create Request message.
            </t>
            <t>
                The message formats in this document are specified using Backus-Naur Format (BNF) encoding as specified in [RBNF].
			</t>
-->
		</section>


		<section title="Motivation">
            <t>
                As for current MPLS mechanism, make-before-break(M-B-B) concept is outlined in <xref target="RFC3209"/>, which allows adaptive and smooth RSVP-TE LSP rerouting that does not disrupt traffic or adversely impact network operations while rerouting is in progress.  M-B-B is applicable for reoptimizing LSP's route and resources for several use cases, for example, to adopt better path for reversion after failure, to change traversing node/links for planned maintenance, to change bandwidth of LSPs etc.  M-B-B is also used for global restoration scenario in case of failure, which  is effective if operators do not want to reserve both working and standby LSP's bandwidth in advance. <!-- [2013/10/20]to clarify Why M-B-B is effective in restoration case as follows --> Once failure occur, LSP becomes down, however PSB (Path State Block) of a headend node remains and keep resources intact. Using M-B-B, the headend node is able to resignals working LSP while the PSB remains until new restoration LSP is successfully established. In real deployment, it can also be operated with local protection scheme FRR (Fast ReRoute).
            </t>
            <t>
                Since M-B-B operational scheme is universally common in MPLS network today, it is naturally much desirable to utilize it under the architecture of stateful PCE.
            </t>
            <t>   
                <!--To provide restoration TE LSPs in minimal data traffic disruption or reoptimized TE LSPs with no disruption, timing and sequence of data traffic switchover after signaling is to be treated.  That is because each tunnel is able to have one or more TE LSPs (i.e., it is allowed to have multiple RSVP sessions with different LSP-IDs that share a common Tunnel IDs between a pair of edge nodes) but most ingress node transmits data traffic over only one (or some) of those LSPs.  In short, the restoration procedure of Make-Before-Break is outlined as follows restoration -->
                The basic procedure of the Make-Before-Break method is outlined as follows:<!-- [Ina:2013/02/28][Xian:2013/04/01] typos + "method" + ":" -->
                <list style="empty">
                    <t>
                    <list style="numbers">
                    	<t>Establish a new LSP</t>
                    	<t>Transfer data traffic from old LSP onto the new LSP</t>
                    	<t>Tear down the old LSP (Release old PSB)</t>
                    </list>
                    </t>
                    <t></t>

                </list>

                In M-B-B, it is an important behavior that headend node handles the sequence of data traffic switchover. 
                <!-- [Xian:2013/04/01] "treats" for more detail-->
                The headend is able to Make one or more new LSPs for a particular Tunnel (i.e., it is allowed to signal multiple RSVP sessions with different LSP-IDs that share a common Tunnel IDs), and the headend will switch the traffic to only one (or some) of those LSPs. In some use cases about stateful PCE, it is expected that controller/operators can watch and control when the data is switched over and which LSPs are used. Therefore, this document covers such a procedure and related message extensions.

                <!-- Current proposals <xref target="I-D.ietf-pce-stateful-pce"/>  and <xref target="I-D.crabbe-pce-stateful-pce-protection"/> do not cover such a process requiring data transfer consideration, and are not clear about signaling and teardown processes that PCC (ingress) is to take when receiving PCEP messages.  Therefore this document presents those procedure and message extensions. 
                -->

            </t>
        </section>

		<section title="Make-Before-Break LSP procedures">

            <!-- [Yimin:2013/02/23],[Ina:2013/03/01] suggested from "One Stroke" to "Implicit" and from "Granular" to "Explicit"-->

            <t>
                There are possibly two modes introduced for Make-Before-Break procedure under stateful PCE.
                The first one is "implicit M-B-B mode", where the operation is triggered by a Update Request(PCUpd) message from a PCE, and a PCC handles whole Make-Before-Break steps (signaling, transferring data traffic <!--Dhruv--> and teardown) by itself. This mode utilizes the existing messages and procedures as defined in <xref target="I-D.ietf-pce-stateful-pce"/> <!-- [Yosuke:2013/06/30] and <xref target="I-D.crabbe-pce-stateful-pce-mpls-te"/>-->.
            </t>
            <t>
                The second one is "explicit M-B-B mode", where the operation is triggered by a PCUpd <!-- [Yosuke:2013/06/30] LSP Create Request(PCCreate) --> message with a new TRIAL LSP TLV (defined in <xref target="TRIAL-LSP-TLV"/>). A PCE also controls timing and sequence of <!--each granular--> the M-B-B steps that a PCC takes. This procedure uses ASSOCIATION Object that is defined in <xref target="I-D.ietf-pce-association-group"/>.
            </t>
            <t>
                Both types of procedure require at least two LSPs residing in a single MPLS-TE tunnel, working LSP and <!-- [Yosuke:2013/06/30] restoration to trial --> trial LSPs. An ingress node is currently transporting data traffic on the working LSP, and then it establishes one or more trial LSPs. As per <xref target="RFC3209"/> Section 2.5. "LSP ID" of a restoration LSP, which is newly signaled, differs from that of a working LSP in RSVP-TE. Note that it is also used for LSP-ID in LSP Identifiers TLVs in PCEP messages, and it differs from PLSP-ID (<xref target="I-D.ietf-pce-stateful-pce"/>).
                <!-- [Xian:2013/04/01] typos "a" restoration LSP, "a working LSP"-->
                In this document, LSP ID of a working LSP describes "old" and that of a trial LSP describes "new" as a simple example.
            </t>
            <t>
                Implicit mode has high affinity with most existing MPLS edge node implementations which perform entire steps of M-B-B automatically at once. This mode is particularly applicable for migration scenario for the existing deployment where service providers want their recovery/reoptimization operation be delegated to a centralized PCE.
            </t>
            <t>
                Explicit mode is much more flexible than Implicit mode since it allows PCEs to manage each step of the M-B-B.  Explicit mode is applicable to several new use cases that require split control of signaling and data switchover.  For example, if end-to-end data path is created by connecting multiple individual LSPs across different segments (e.g., LSP stitching), in reoptimization scenario, data flowing cannot be started unless signaling of all LSPs is completed.
                <!-- [Ina:2013/02/28] all LSPs are => is -->
                Similarly, there is a case under Software Defined Networking (SDN) applications, where MPLS domain is connected to other non-MPLS domains, and the end-to-end data switchover timing should be carefully coordinated with various different methods of path/flow setup in each domain.
            </t>
            <t>
                PCC and PCE can distinguish which mode, implicit mode or explicit mode, is to be performed by checking the presence of ASSOCIATION and certain TLV in the PCEP messages. The implementation MAY support both modes, but for each restoration/reoptimization operation, either one of them SHOULD be exclusively applied. 
            </t>
<!--Dhruv: A bit in STATEFUL-PCE-CAPABILITY TLV maybe used in OPEN message to specify the explicit M-B-B capability by the PCEP speaker similar to draft-tanaka-pce-stateful-pce-data-ctrl.-->
            <section title="Implicit Make-Before-Break Mode">
                <t>
                    This specifies the detailed procedure of M-B-B LSP restoration and reoptimization using existing messages which are defined in <xref target="I-D.ietf-pce-stateful-pce"/> <!-- and <xref target="I-D.crabbe-pce-stateful-pce-protection"/> -->.
                    This procedure is based on the current existing messages/TLVs and no extensions are required.
                    Once a PCC receives PCUpd message from a PCE, the PCC automatically executes the implicit M-B-B procedure as described in <xref target="I-D.ietf-pce-stateful-pce"/> Section 6.2.
                <!-- [Ina:2013/04/01] Agreed with our suggestion, I-D.ietf-pce-stateful-pce has the description about implicit mode  -->

                </t>

                <t>
                    First, A PCUpd message is sent from a PCE to trigger M-B-B procedure. Once receiving the PCUpd message, the PCC starts signaling a new restoration/reoptimization LSP and it replies back to the PCE a PCRpt message with LSP-IDENTIFIERS TLV (with new LSP-ID) in the LSP Object to notify the result of signaling.
                    If the new LSP failed to setup, the PCC sends to the PCE the detail of the result in a PCErr or PCRpt message with the same SRP (Stateful PCE Request Parameters) object as that of the PCUpd message and it MAY wait for a next instruction from the PCE. 
                </t>
                <t>
                    <!-- If the specified LSP ID value is a non-zero and is not currently used by the existing RSVP-TE sessions about the corresponding tunnel owned by the PCC, that value MUST be used for next signaling by PCC as headend, i.e., Make a new LSP for restoration.  If the value is already used in the existing network in the specified tunnel, a PCC replies a PCEP Error message as defined in <xref target="I-D.ietf-pce-stateful-pce"/> with Error-type-19(Invalid Operation) and Error-Value=[TBD](Value already in use). 
                -->
                </t>
                <!-- [Tanaka:2013/04/15] 
                -->

                <!-- <t>
                    _____________________________________________________________.
                    If the specified LSP ID value is zero, the PCC MUST automatically assign a new LSP ID to signal restoration LSP.
                </t> --> 

                <!-- <t>
                    A PCC replies PCEP Error message to a PCE if a PCUpd does not carry LSP Identifiers TLV nor SYMBOLIC-PATH-NAME TLV. Error-type-6(Mandatory Object Missing) and Error-Value=[TBD](See <xref target="ERROR-CODE"/>).
                </t>--> 
                <!-- <t>
                    If LSP Identifiers TLV or SYMBOLIC-PATH-NAME TLV in a PCUpd message is specifying non-delegated LSP, the PCC sends PCErr as defined in <xref target="I-D.ietf-pce-stateful-pce"/>.
                </t>--> 
                <t>
                    Second, once a new LSP is successfully established, a PCC transfers data traffic from working LSP to new LSP automatically. 
                    <!-- TBRemoved: If the restoration LSP failed in setup, the PCC MAY retry RSVP-TE signaling with possibly different attributes. -->
                    <!--or retry signaling until some timeout will come.-->
                   <!-- [Yimin:2013/02/23] mentioned that PCC simply notify PCE and let it decide what to do next -->

                </t>
                    <!-- // PCRpt????�??????��????????�� , LSP identifiers TLV ?�"?�?-->
                <t>
                    Finally, when a PCC successfully transferred data traffic to the new LSP, the PCC tears down the (previous) working LSP by RSVP-TE signaling, then the PCC MUST send another PCRpt message. That PCRpt message MUST carry a LSP Object with LSP-IDENTIFIERS TLV (with <!--Dhruv-->old LSP-ID) which indicates the value of RSVP-TE signaling the PCC has just <!-- established  [Tanaka:2013/07/07]-->torn down. As per <xref target="I-D.ietf-pce-stateful-pce"/>, the message has to have SRP-ID set to 0x00000000.
                </t>

                <t>
                    Following <xref target="implicit_figure"/> illustrates the example of implicit M-B-B procedure, in following conditions. Tunnel ID and LSP ID are included in an LSP Identifiers TLV in a LSP Object.
                    </t>
                    
                    <t>
                    <list style="hanging">
                        <t hangText="working LSP :">ERO=a-b, Tunnel ID=T1, LSP ID=old, PLSP-ID=X </t>
                        <t hangText="restoration LSP :">ERO=a-c-b, Tunnel ID=T1, LSP ID=new, PLSP-ID=X </t>
                    </list>
                </t>

			    <figure title="Implicit Make-Before-Break Procedure" anchor="implicit_figure">
					<artwork><![CDATA[
                                  __c__
                                 /     \
PCE               PCC(Ingress)--a-------b---Egress
 |                    |                        |
 |   Data on old LSP  =>)))))))))))))))))))))))|  
 |                    |          :             |  
 |--PCUpd(PLSP-ID=X,->|          :             |
 |      SRP-ID=Y,     |                        |
 |      ERO=a-c-b)    |---Path(ERO=a-c-b-, --> |
 |                    |       LSP ID new)      |
 |                    |                        |
 |                    | <-----Resv-------------|    
 | <- PCRpt(PLSP-ID=X,|                        |       
 |      O=Up,         |                        |
 |      SRP-ID=Y,     |                        |
 |      Tunnel ID=T1, |                        |       
 |      LSP ID=new)   |                        |       
 |                    |                        |       
 |                    |                        |       
 |   Transfer data    |))))))))))))))))))))))))|       
 |   from old to new =>}}}}}}}}}}}}}}}}}}}}}}}}|       
 |                    |          :             |       
 |                    |          :             |       
 |                    |---PathTear(ERO=a-b, -> | 
 |                    |         LSP ID old)    |       
 | <- PCRpt(PLSP-ID=X,|                        |
 |      O=Dn,R=1,     |                        |
 |      SRP-ID=0,     |                        |
 |      Tunnel ID=T1, |                        |      
 |      LSP ID=old)   |                        |       
   
  O flag = Operational flag in LSP object.
  R flag = Remove flag in LSP object.
  
]]>
                    </artwork>
				</figure>
            </section>


            <section title="Explicit Make-Before-Break Mode">            
				<t>
					Comparing to the implicit M-B-B mode, explicit M-B-B mode allows a PCE to control timing and sequence of subsequent make-before-break steps. 
				</t>
                <!-- [Ina:2013/02/28] Compareing => Comparing -->
		
                <t>
          As per <xref target="I-D.ietf-pce-association-group"/>, LSPs are associated with other LSPs with which they interact by adding them to a common association group.  In this draft, this grouping is used to define associations between a set of LSPs. This document define one new association type called "Explicit MBB Association Type" of value TBD1.
                </t>	
		<t>
		 Prior to start of explicit M-B-B mode, PCE makes an association group for the working LSP by including the Association Object (defined in <xref target="I-D.ietf-pce-association-group"/>) with "Explicit MBB Association Type". This allows the PCEs to identify the LSP belong to a Make-Before-Break association group. PCE may include the TRIAL-LSP TLV that is defined in this document with D(Data Switchover) and T(Trial LSP) flags set to 0 in Association Object. This is a pre-requisite for the explicit M-B-B.
                </t>

                <t>
          First step of the explicit M-B-B, the PCE triggers signaling of a new LSP at the PCC by sending a PCUpd message with T flag in TRIAL-LSP TLV set to 1, in the ASSOCIATION Object. The PCC sends a PCRpt message back to the PCE to notify the result of the signaling of the new LSP.
                </t>
                <t>
                    Second, the PCE instructs the PCC to transfer data traffic from old LSP to new LSP by sending a PCUpd message with D flag in TRIAL-LSP TLV set to 1, in the ASSOCIATION Object. The PCC automatically tears down the (previous) working LSP once the traffic switchover successfully is executed.  Then it sends back to the PCE a PCRpt message to notify the result of the switchover.
                    <!-- RAMA Second, the PCE instructs the PCC to transfer data traffic from old LSP to new LSP by sending a PCUpd message with DATA-CONTROL TLV (defined in <xref target="I-D.tanaka-pce-stateful-pce-data-ctrl"/>). The PCC automatically tears down the (previous) working LSP once the traffic switchover successfully is executed. Then it sends back to the PCE a PCRpt message to notify the result of the switchover. --> 
                </t>
                <t>
                    [Editor's Note - The operator may want to separate the second step into traffic switchover and tearing down old LSP. It is further study about the separate operation of third step.]
				</t>
				<t>
                                    The following subsections specify each Explicit Make-Before-Break step in detail.
				</t>
                <section title="Initiate Association Group for old LSP">
                    <t>
                        As a pre-requisite before starting explicit M-B-B, PCE makes an association group for working LSP by sending PCUpd message that contains ASSOCIATION object with TRIAL-LSP TLV with both D and T flags set to zero. TRIAL-LSP TLV is optional in the ASSOCIATION object at this step.
                    </t>
                    <t>
                        <xref target="initiate-association-group"/> illustrates an example of working LSP (PLSP-ID P1, Tunnel ID T1, LSP-ID old, Association Group ID G1 and ERO Ingress-a-b-Egress). 
                    </t>
                    
                    
                     <figure title="Initiate Associate Group for old LSP" anchor="initiate-association-group">
                        <artwork><![CDATA[

                                  __c__
                                 /     \
PCE               PCC(Ingress)--a-------b---Egress
 |   data traffic on old LSP                   |
 |                    |))))))))))))))))))))))))|  
 |--PCUpd      ------>|          :             |
 |   LSP Object       |          :             |
 |    PLSP-ID=P1      |          :             |
 |    SRP-ID=S1       |          :             |
 |    LSP ID=old      |                        |
 |   ASSOC Object     |                        |
 |    Assoc-Type=MBB  |                        |
 |    Assoc-ID=G1     |                        |
 |    +TRIAL-LSP TLV  |                        |
 |      D-Flag=0      |                        |
 |      T-Flag=0      |                        |
 |                    |                        |

]]>
                        </artwork>
                     </figure>
                </section>


                    
	            <section title="Establish new Trial LSP">

                    <t>
                  As a first step of M-B-B procedure, a PCC establishes a new LSP for restoration once PCC receives a PCUpd message with T flag (in TRIAL-LSP TLV) set to 1, in a ASSOCIATION Object from a PCE.  We call this newly established LSPs for restoration "trial LSP". A trial LSP is signaled the same RSVP-TE Tunnel ID but different LSP ID from active working LSP, and both the active working LSP and new trial LSPs MUST be signaled with Shared Explicit style as describes in <xref target="RFC3209"/>.
                    </t>
                        	<t>
           			   When a new trial LSP was signaled successfully, the PCC sends a PCRpt message toward the PCE to notify the result.
                       <!--by setting Operational flag 1 in the LSP object.--> The PCRpt message from the PCC MUST have the LSP object with LSP-IDENTIFIERS TLV that indicates RSVP-TE Tunnel ID and LSP ID the PCC has just established.
           			 </t>

           			 <!-- LSP setup fail then PCRpt with RSVP ERROR SPEC TLV -->
           			 <t>
           			 	If a new trial LSP failed to be established by some reason of RSVP-TE signaling, the PCC MUST send to the PCE a PCRpt message carrying LSP-IDENTIFIERS TLV and RSVP-ERROR-SPEC TLV as defined in <xref target="I-D.ietf-pce-stateful-pce"/> Section 7.3.4.
           			 </t>
                     <!-- Multiple trial lsp -->
                     <t>
                        A PCC SHOULD accept multiple PCUpd messages with TRIAL-LSP TLV in a ASSOCIATION Object. And a PCC SHOULD establish as many trial lsps as the number of PCUpd messages it receives. A PCC may also choose to implement a limit on the number of such PCUpd message.
                    </t>
                         
                         <!--Dhruv: this needs more discussion because it contradicts with the behavior described in [I-D.ietf-pce-stateful-pce].-->
                     
           			 <t>
           			 	<xref target="establish-new-lsp"/> illustrates a example, working LSP(PLSP-ID P1, Tunnel ID T1, LSP-ID old, ERO Ingress-a-b-Egress), trial LSP(<!--Dhruv-->PLSP-ID P1, Tunnel ID T1, LSP-ID new, ERO Ingress-a-c-b-Egress).
           			 </t>
           			 <figure title="Establish new LSP" anchor="establish-new-lsp">
           			 	<artwork><![CDATA[

                                  __c__
                                 /     \
PCE               PCC(Ingress)--a-------b---Egress
 |   data traffic on old LSP                   |
 |                    |))))))))))))))))))))))))|  
 |--PCUpd      ------>|          :             |
 |   LSP Object       |          :             |
 |    PLSP-ID=P1      |          :             |
 |    SRP-ID=S2       |          :             |
 |    Tunnel ID=T1    |                        |
 |    LSP ID=0        |                        |
 |   ASSOC Object     |                        |
 |    Assoc-Type=MBB  |                        |
 |    Assoc-ID=G1     |                        |
 |    +TRIAL-LSP TLV  |                        |
 |      D-Flag=0      |                        |
 |      T-Flag=1      |                        |
 |   ERO Obj=a-c-b    |                        |
 |                    |                        |
 |                    |---Path(LSP ID=new, --> |
 |                    |       ERO=a-c-b)       |
 |                    |                        |
 |                    | <----- Resv------------|
 |<--PCRpt   ---------|                        |
 |    LSP Object      |          :             |
 |     PLSP-ID=P1     |))))))))))))))))))))))))|
 |     SRP-ID=S2      |          :             |
 |     Tunnel ID=T1   |          :             |
 |     LSP ID=new     |          :             |
 |   ASSOC Object     |          :             |
 |    Assoc-Type=MBB  |          :             |
 |    Assoc-ID=G1     |          :             |
 |    +TRIAL-LSP TLV  |          :             |
 |      D-Flag=0      |          :             |
 |      T-Flag=1      |          :             |
 |    RRO Obj=a-c-b   |          :             |
 |                    |                        |

]]>
           			 	</artwork>
           			 </figure>


	            </section>


	            <section title="Switchover Data Traffic triggered by a PCUpd message">
	           		<t>

                  As a second step, the PCC(Ingress) transfers data traffic from a working LSP to a trial LSP.  To specify desired LSP for transferring data traffic, a PCUpd message from a PCE MUST have a TRIAL-LSP TLV set D flag to 1, in a ASSOCIATION Object. 
	           			      <!-- [Ina:2013/02/28], [Xian:2013/04/01] typos "Contro" to "Control"-->
	           		</t>

                    <t>
                        Data switchover happens from old LSP to new trial LSP, once PCC receives a PCUpd message with D flag in TRIAL-LSP TLV set to 1 in the ASSOCIATION object from a PCE.
                    </t>
	           		
                    <t>
                        The PCC SHOULD tear down the old working LSP and other trial LSPs which the data traffic is no longer used immediately once the data traffic successfully switched over (See <xref target="data-transferring"/>).</t> 
                        <t>[Editor's Note - Another option would be, a PCC tears down old lsp separately using mechanism in <xref target="I-D.ietf-pce-pce-initiated-lsp"/> for PCE-Initiated LSPs.]</t>
                        <t> 
                        The PCC sends to the PCE a PCRpt message to notify the removal of both old LSP and other trial LSPs, which SRP-ID is set to 0x00000000. 
                    </t>

	           		<figure title="Transfer data traffic from old LSP to new LSP" anchor="data-transferring">
	           			<artwork><![CDATA[
                                  __c__
                                 /     \
PCE               PCC(Ingress)--a-------b---Egress
 |                    |                        |
 |                    |))))))))))))))))))))))))|  data on old LSP
 |--PCUpd     ------> |))))))))))))))))))))))))|
 |   LSP Object       |}}}}}}}}}}}}}}}}}}}}}}}}|  data on new LSP
 |    PLSP ID=P1      |}}}}}}}}}}}}}}}}}}}}}}}}|
 |    SRP ID=S3       |}}}}}}}}}}}}}}}}}}}}}}}}|
 |    Tunnel ID=T1    |          :             |
 |    LSP ID=new      |          :             |
 |   ASSOC Object     |          :             |
 |    Assoc-Type=MBB  |                        |
 |    Assoc-ID=G1     |                        |
 |    +TRIAL-LSP TLV  |                        |
 |      D-Flag=1      |                        |
 |      T-Flag=0      |                        |
 |                    |                        |
 | <-- PCRpt  --------|                        |
 |   LSP Object       |                        |
 |    PLSP ID=P1      |                        |
 |    SRP ID=S3       |                        |
 |    Tunnel ID=T1    |                        |
 |    LSP ID=new      |                        |
 |                    |--PathTear(ERO a-b,  -->|  Tear down old 
 |                    | Tunnel=T1,LSP ID=old)  |   automatically
 |                    |                        |
 | <-- PCRpt(O=Dn,R=1,|                        |
 |   PLSP ID=P1       |                        |
 |   SRP ID=0         |                        |
 |   Tunnel ID=T1     |                        |
 |   LSP-ID=old)      |                        |
 |                    |                        |
 |                    |                        |
 
         O flag = Operational flag in LSP object.
         R flag = Remove flag in LSP object.
  
]]>
						</artwork>
					</figure>
	            </section>


            </section>
		</section>



        <section title="Protocol extension">
	    <section anchor="encoding" title="Association group">
		<t>
		 As per <xref target="I-D.ietf-pce-association-group"/>, LSPs are associated with other LSPs with which they interact by adding them to a common association group. The Association ID will be used to identify the MBB group a set of LSPs belongs to. This document defines a new Association type, based on the generic Association object -
		  <list style="symbols">
		    <t>
		Association type = TBD1 ("Explicit MBB Association Type").
		    </t>
		</list>
		</t>
        <t>This Association-Type is dynamic in nature and created by the PCE for the LSPs originating at the same head node. These associations are conveyed via PCEP messages to the PCEP peer. Operator-configured Association Range SHOULD NOT be set for this association-type and MUST be ignored.</t>
            </section>

            <section anchor="TRIAL-LSP-TLV" title="Trial LSP TLV in ASSOCIATION Objects">
                <t>
                    This document defines a new TLV named TRIAL-LSP TLV which can be optionally carried in the ASSOCIATION object. 
                </t>
                <figure title="TRIAL-LSP TLV format" anchor="format">
                    <artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Type=TBD2           |           Length              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             Flags                         |D|T|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  
]]>
                    </artwork>
                </figure>
                <t>
                    TRIAL-LSP TLV is <!--Dhruv-->an optional TLV of the ASSOCIATION Object and is used in a PCUpd message especially to perform explicit mode M-B-B. A PCC signals a trial LSP once it receives a PCUpd in which ASSOCIATION object has a TRIAL-LSP TLV. <!--It MAY set RSVP LSP-ID in LSP-ID field of TRIAL-LSP TLV in a PCUpd message in order to notify a PCC of desired trial LSP-ID to signal.-->
                </t>
                <t>
                    <list style="hanging">
                        <t hangText="T(Trial LSP - 1 bit): ">
				This field MUST be set to 1 in a PCUpd message when a PCE requests a PCC to signal new trial LSP. It MUST be zero for a working LSP.
                        </t>

			<t hangText="D(Data switchover - 1 bit): ">
				This field MUST be set to 1 in a PCUpd message when a PCE requests a PCC to switchover data traffic for new trial LSP. It MUST be zero otherwise.
                        </t>              
          
                        <t hangText="Flags: ">None defined. MUST be set to zero. Ignored on receipt.
                        </t>
                    </list>
                </t>
            </section>

            <section title="Optional TLVs" toc="default">
 		<t>
                    The MBB association group MAY carry some optional TLVs including but not limited to:
                </t>
		<t>
			o  VENDOR-INFORMATION-TLV: Used to communicate arbitrary vendor
      specific behavioral information,, described in <xref target="RFC7470"/>.
		</t>
            </section>
        </section>

		<section title="Security Considerations">
				<t>
                    This document defines one new type for association, which do not add any new security concerns beyond those discussed in <xref target="RFC5440"/>, <xref target="I-D.ietf-pce-stateful-pce"/> and <xref target="I-D.ietf-pce-association-group"/> in itself.
				</t>

		</section>

        <section title="IANA Considerations">
            <section title="PCEP TLV Indicators">
                <t>
                    This document defines the following new PCEP TLVs:
                </t>
                <figure>
                    <artwork><![CDATA[
  Value     Meaning              Reference
    TBD2    TRIAL-LSP TLV        This document

]]>
                    </artwork>
                </figure>
            </section>

						<section title="Association Object Type Indicator">
                <t>
                    This document defines the following new association type originally  defined in <xref target="I-D.ietf-pce-association-group"/>.
                </t>
                <figure>
                    <artwork><![CDATA[
  Value     Name                           Reference
    TBD1    MBB Association Type        This document

]]>
                    </artwork>
                </figure>
            </section>
            
            
        </section>
        <section title="Operational Considerations">
            <t>
            </t>
                <section title="Operation in multiple PCEs">
                    <t>
                        In addition to basic operations under multiple PCEs as described in <xref target="I-D.ietf-pce-stateful-pce"/>, a PCC supports both types of M-B-B operations. 
                    </t>
                    <t>
                        Implicit mode M-B-B requires only one PCUpd message to trigger M-B-B process, therefore a PCC accepts a message from a primary PCE whom the PCC delegates the LSPs to. An attempt to update parameters of a non-delegated LSP results in the PCC sending a PCErr message as defined in <xref target="I-D.ietf-pce-stateful-pce"/>.
                    </t>
                    <t>
                        Explicit mode M-B-B requires at least three PCUpd messages(1. for new Association-Group creation, 2. for trial-LSP signaling, 3. for traffic switchover) to trigger each subsequent step. All steps MUST be taken by one primary PCE because state synchronization of trial-LSPs between the primary and backup PCE may be complex. If the PCC revokes LSP delegations after a Redelegation Timeout Interval, the PCC MUST tear down all trial-LSPs and redelegate a working LSP to alternate PCE. An attempt to trigger either step of explicit mode M-B-B of a non-delegated LSP results in the PCC sending the same PCErr as implicit mode M-B-B.
                    </t>

                </section>
        </section>

		<section title="Acknowledgments">
			<t>
			Many thanks to Ina Minei, Adrian Farrel, Yimin Shen, and Xian Zhang for their ideas and feedback in documentation.
			</t>
		</section>

	</middle>

	<back>
		<references title="Normative References">
                        &rfc2119;
						&rfc5440;
						&I-D.ietf-pce-stateful-pce;
						&I-D.ietf-pce-pce-initiated-lsp;
						&I-D.ietf-pce-association-group;

		</references>
		<references title="Informative References">
						&rfc3209;
						&rfc4426;
						&rfc4427;
						&rfc7470;
                        <!--&I-D.crabbe-pce-stateful-pce-mpls-te;-->
        </references>
	</back>
</rfc>

