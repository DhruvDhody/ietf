<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4206 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4206.xml">
<!ENTITY RFC5150 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5150.xml">
<!ENTITY RFC5151 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5151.xml">
<!ENTITY RFC5440 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5440.xml">
<!ENTITY RFC5441 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5441.xml">
<!ENTITY RFC5541 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5541.xml">
<!ENTITY RFC5376 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5376.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8231 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8231.xml">
<!ENTITY RFC8281 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8281.xml">
<!ENTITY RFC8283 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8283.xml">
<!ENTITY RFC8355 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8355.xml">
<!ENTITY RFC8402 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml">
<!ENTITY I-D.ietf-pce-segment-routing SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-pce-segment-routing-14.xml">
<!ENTITY I-D.ietf-pce-stateful-hpce SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-pce-stateful-hpce-05.xml">
<!ENTITY I-D.li-pce-controlled-id-space SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-li-pce-controlled-id-space-00.xml">
<!ENTITY I-D.dugeon-pce-stateful-interdomain SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-dugeon-pce-stateful-interdomain-01.xml">
<!ENTITY I-D.zhao-pce-pcep-extension-for-pce-controller SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-zhao-pce-pcep-extension-for-pce-controller-08.xml">
<!ENTITY I-D.zhao-pce-pcep-extension-pce-controller-sr SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-zhao-pce-pcep-extension-pce-controller-sr-03.xml">

]>
<rfc submissionType="IETF" docName="draft-ietf-teas-pcecc-use-cases-02" category="info"><?rfc compact="yes"?>
	<?rfc text-list-symbols="oo*+-"?>
	<?rfc subcompact="no"?>
	<?rfc sortrefs="no"?>
	<?rfc symrefs="yes"?>
	<?rfc strict="yes"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="PCECC">The Use Cases for Path Computation Element (PCE) as a Central Controller (PCECC).</title>

    <author fullname="Quintin Zhao" initials="Q." surname="Zhao">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>125 Nagog Technology Park</street>
          <city>Acton</city>
          <region>MA</region>
          <code>01719</code>
          <country>US</country>
        </postal>
        <email>quintin.zhao@huawei.com</email>
      </address>
    </author>
   
    <author fullname="Zhenbin (Robin) Li" initials="Z." surname="Li">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Huawei Bld., No.156 Beiqing Rd.</street>
          <city>Beijing</city>
          <region></region>
          <code>100095</code>
          <country>China</country>
        </postal>
        <email>lizhenbin@huawei.com</email>
      </address>
    </author>

    <author fullname="Boris Khasanov" initials="B." surname="Khasanov">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Moskovskiy Prospekt 97A</street>
          <city>St.Petersburg</city>
          <region></region>
          <code>196084</code>
          <country>Russia</country>
        </postal>
        <email>khasanov.boris@huawei.com</email>
      </address>
    </author>

    <author fullname="Dhruv Dhody" initials="D."  surname="Dhody">
   <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Divyashree Techno Park, Whitefield</street>
          <city>Bangalore</city>
          <region>Karnataka 560066</region>
          <country>India</country>
        </postal>
        <email>dhruv.ietf@gmail.com</email>
      </address>
    </author>
   
    <author fullname="King Ke" initials="K."  surname="Ke">
   <organization>Tencent Holdings Ltd.</organization>
      <address>
        <postal>
          <street></street>
          <city>Shenzhen</city>
          <region></region>
          <country>China</country>
        </postal>
        <email>kinghe@tencent.com</email>
      </address>
    </author>

    <author fullname="Luyuan Fang" initials="L."  surname="Fang">
   <organization>Expedia, Inc.</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <region></region>
          <country>USA</country>
        </postal>
        <email>luyuanf@gmail.com</email>
      </address>
    </author>

    <author fullname="Chao Zhou" initials="C."  surname="Zhou">
   <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <region></region>
          <country></country>
        </postal>
        <email>chao.zhou@cisco.com</email>
      </address>
    </author>   

    <author fullname="Boris Zhang" initials="B."  surname="Zhang">
   <organization>Telus Communications</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <region></region>
          <country></country>
        </postal>
        <email>Boris.zhang@telus.com</email>
      </address>
    </author>   

    <author fullname="Artem Rachitskiy" initials="A."  surname="Rachitskiy">
   <organization>Mobile TeleSystems JLLC</organization>
      <address>
        <postal>
          <street>Nezavisimosti ave., 95</street>
          <city>Minsk</city>
          <code>220043</code>
          <region></region>
          <country>Belarus</country>
        </postal>
        <email>arachitskiy@mts.by</email>
      </address>
    </author>  

    <author fullname="Anton Gulida" initials="A."  surname="Gulida">
   <organization>LLC "Lifetech"</organization>
      <address>
        <postal>
          <street>Krasnoarmeyskaya str., 24</street>
          <city>Minsk</city>
          <code>220030</code>
          <region></region>
          <country>Belarus</country>
        </postal>
        <email>anton.gulida@life.com.by</email>
      </address>
    </author>  


	<date/>
	<workgroup>TEAS Working Group</workgroup>
	<abstract>
   <t>The Path Computation Element (PCE) is a core component of Software-
   Defined Networking (SDN) systems.  It can compute optimal paths for
   traffic across a network and can also update the paths to reflect
   changes in the network or traffic demands. PCE was developed to 
   derive paths for MPLS Label Switched Paths
   (LSPs), which are supplied to the head end of the LSP using the Path
   Computation Element Communication Protocol (PCEP).</t>

   <t>SDN has a broader applicability than signaled MPLS traffic-engineered
   (TE) networks, and the PCE may be used to determine paths in a range
   of use cases including static LSPs, segment routing, Service Function
   Chaining (SFC), and most forms of a routed or switched network.  It
   is, therefore, reasonable to consider PCEP as a control protocol for
   use in these environments to allow the PCE to be fully enabled as a
   central controller.</t>

   <t>This document describes
   general considerations for PCECC deployment and examines its
   applicability and benefits, as well as its challenges and
   limitations, through a number of use cases. 
   PCEP extensions required for stateful PCE usage are
   covered in separate documents.</t>

	</abstract>
  <note title="Requirements Language">

<t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all
   capitals, as shown here.</t>
</note>
	</front>

	<middle>
	<section title="Introduction" anchor="section-1"><t>
   An Architecture for Use of PCE and PCEP in a Network with Central
   Control <xref target="RFC8283"/> describes
   SDN architecture where the Path Computation Element (PCE) determines
   paths for variety of diferent usecases, with PCEP as a general southbound
   communication protocol with all the nodes along the path..</t>

   <t><xref target="I-D.zhao-pce-pcep-extension-for-pce-controller"/> introduces the procedures and
   extensions for PCEP to support the PCECC architecture <xref target="RFC8283"/>.</t>

	<t>
   This draft describes the various usecases for the PCECC architecture.</t>

	</section>

	<section title="Terminology" anchor="section-2">
    <t>
   The following terminology is used in this document.

	<list style="hanging" hangIndent="3">
  <t hangText="IGP:">
	Interior Gateway Protocol.  Either of the two routing
	protocols, Open Shortest Path First (OSPF) or Intermediate System
  to Intermediate System (IS-IS).
	</t>

	<t hangText="PCC:">
	Path Computation Client: any client application requesting a
	path computation to be performed by a Path Computation Element.
	</t>

	<t hangText="PCE:">
	Path Computation Element.  An entity (component, application,
	or network node) that is capable of computing a network path or
      route based on a network graph and applying computational
      constraints.
	</t>

  <t hangText="PCECC:">
  PCE as a central controller. Extension of PCE to support SDN functions as per <xref target="RFC8283"/>.
  </t>

	<t hangText="TE:">
	Traffic Engineering.
	</t>

	</list></t>
	
	</section>
  <section title="Application Scenarios">
  <t>In the following sections, several use cases are described,
   showcasing scenarios that benefit from the deployment of 
   PCECC.</t>



	<section title="Use Cases of PCECC for Label Management" anchor="section-3">
    <t>As per <xref target="RFC8283"/>, in some cases, the PCE-based controller can take responsibility for
   managing some part of the MPLS label space for each of the routers
   that it controls, and it may taker wider responsibility for
   partitioning the label space for each router and allocating different
   parts for different uses, communicating the ranges to the router
   using PCEP.</t>
   <t><xref target="I-D.zhao-pce-pcep-extension-for-pce-controller"/> describe a mode
   where LSPs are provisioned as explicit label instructions at each hop
   on the end-to-end path.  Each router along the path must be told what
   label forwarding instructions to program and what resources to
   reserve.  The controller uses PCEP to communicate with each router
   along the path of the end-to-end LSP.  For this to work, the PCE-
   based controller will take responsibility for managing some part of
   the MPLS label space for each of the routers that it controls. 
   An extention to PCEP could be done to allow a PCC to
   inform the PCE of such a label space to control.</t>

   <t><xref target="I-D.ietf-pce-segment-routing"/> specifies extensions to PCEP that
   allow a stateful PCE to compute, update or initiate SR-TE paths.
   <xref target="I-D.zhao-pce-pcep-extension-pce-controller-sr"/> describes the
   mechanism for PCECC to allocate and provision the node/prefix/
   adjacency label (SID) via PCEP.  To make such allocation PCE needs to
   be aware of the label space from Segment Routing Global Block (SRGB)
   or Segment Routing Local Block (SRLB)
   <xref target="RFC8402"/> of the node that it controls.  A
   mechanism for a PCC to inform the PCE of such a label space to
   control is needed within PCEP.  The full SRGB/SRLB of a node could be
   learned via existing IGP or BGP-LS mechanism too.</t>

   <t><xref target="I-D.li-pce-controlled-id-space"/> defines a PCEP extention to support
   advertisement of the MPLS label space to the PCE to control.</t>

   <t>There have been various proposals for Global Labels, the PCECC 
    architecture could be used as means to learn the label space of nodes, and could also be used to
	determine and provision the global label range.</t>

	<!--<t>
   This use case is based on network configuration illustrated using
   the following figure:</t>-->

	<figure title="PCECC for Label Management" anchor="fig_label"><artwork><![CDATA[
+------------------------------+    +------------------------------+
|         PCE DOMAIN 1         |    |         PCE DOMAIN 2         |
|          +--------+          |    |          +--------+          |
|          |        |          |    |          |        |          |
|          | PCECC1 |  ---------PCEP---------- | PCECC2 |          |
|          |        |          |    |          |        |          |
|          |        |          |    |          |        |          |
|          +--------+          |    |          +--------+          |
|         ^          ^         |    |         ^          ^         |
|        /            \  PCEP  |    |  PCEP  /            \        |
|       V              V       |    |       V              V       |
| +--------+        +--------+ |    | +--------+        +--------+ |
| |NODE 11 |        | NODE 1n| |    | |NODE 21 |        | NODE 2n| |
| |        | ...... |        | |    | |        | ...... |        | |
| | PCECC  |        |  PCECC | |    | | PCECC  |        |PCECC   | |
| |Enabled |        | Enabled|      | |Enabled |        |Enabled | |
| +--------+        +--------+ |    | +--------+        +--------+ |
|                              |    |                              |
+------------------------------+    +------------------------------+
 
]]></artwork>
	</figure>
	<t><list style="symbols"><t>PCC would advertise the PCECC capability to the PCE (central
      controller-PCECC) <xref target="I-D.zhao-pce-pcep-extension-for-pce-controller"/>.</t>

	<t>The PCECC could also learn the label range set aside by the PCC (<xref target="I-D.li-pce-controlled-id-space"/>). </t>
  <t>Optionally, the PCECC could determine the shared MPLS global label range for the network.
  <list style="symbols">
	<t>In the case that the shared global label range need to be
      negotiated across multiple domains, the central controllers of
      these domains would also need to negotiate a common global
      label range across domains.</t>

	<t>The PCECC would need to set the shared global label
      range to all PCC nodes in the network.</t>
    </list></t>

	</list>
	</t>

	</section>

	<section title="Using PCECC for SR" anchor="section-4">
    <t>Segment Routing (SR) leverages the source routing paradigm.  Using
   SR, a source node steers a packet through a path without relying on
   hop-by-hop signaling protocols such as LDP or RSVP-TE.  Each path is
   specified as an ordered list of instructions called "segments".  Each
   segment is an instruction to route the packet to a specific place in
   the network, or to perform a specific service on the packet.  A
   database of segments can be distributed through the network using a
   routing protocol (such as IS-IS or OSPF) or by any other means. 
   PCEP (and PCECC) could be one such means.</t>

   <t><xref target="I-D.ietf-pce-segment-routing"/> specify the
   SR specific PCEP extensions. PCECC may further use PCEP protocol 
   for SR SID (Segment Identifier)
   distribution to the SR nodes (PCC) with some benefits. If the
   PCECC allocates and maintains the SID in the network for the nodes and adjacencies; 
   and further distributes them to the SR nodes directly via the
   PCEP session has some advantage over the configurations on 
   each SR node and flooding via IGP, especially in a SDN environment. </t>


   <!--<t>
   For the centralized network, the performance achieved through
   distributed system can not be easy matched if all of the forwarding
   path is computed, downloaded and maintained by the centralized
   controller.  The performance can be improved by supporting part of
   the forwarding path in the PCECC network through the segment routing
   mechanism except that node segment ids and adjacency segment IDs for
   all the network are allocated dynamically and propagated through the
   centralized controller instead of using the IGP extension.</t>-->

	<t>
   When the PCECC is used for the distribution of the node segment ID
   and adjacency segment ID, the node segment ID is allocated from the
   SRGB of the node.  For the allocation of adjacency segment ID, the 
   allocation is from the SRLB of the node as described in <xref target="I-D.zhao-pce-pcep-extension-pce-controller-sr"/>.</t>

	 <t><xref target="RFC8355"/> identifies various protection and resiliency usecases for SR. 
   Path protection lets the ingress node be in charge of the failure
   recovery (used for SR-TE). Also protection can be
   performed by the node adjacent to the failed component, commonly
   referred to as local protection techniques or fast-reroute (FRR) techniques.
   In case of PCECC, the protection paths can be pre-computated
   and setup by the PCE.</t>

	<t>
   The following example illustrate the use case where the node SID and adjacency SID are allocated by the PCECC.</t>

	<figure><artwork><![CDATA[
                       192.0.2.1/32
                       +----------+
                       | R1(1001) |
                       +----------+
                            |
                       +----------+
                       | R2(1002) |  192.0.2.2/32
                       +----------+
                      *   |   *    *
                     *    |   *     *
                    *link1|   *      *
     192.0.2.4/32  *      |   *link2  *  192.0.2.5/32
        +-----------+ 9001|   *     +-----------+
        | R4(1004)  |     |   *     | R5(1005)  |
        +-----------+     |   *     +-----------+
                   *      |   *9003  *   +
                    *     |   *     *    +
                     *    |   *    *     +
                     +-----------+   +-----------+
        192.0.2.3/32 | R3(1003)  |   |R6(1006)   |192.0.2.6/32
                     +-----------+   +-----------+
                          |
                     +-----------+
                     | R8(1008)  |  192.0.2.8/32
                     +-----------+
]]></artwork>
	</figure>
  <section title="PCECC SID Allocation" >
   
   <t>Each node (PCC) is allocated a node-SID by the PCECC. The PCECC
   needs to update the label map of each node to all
   the nodes in the domain.  On receiving the label map, each node (PCC) uses the local
   routing information to determine the next-hop and download the label
   forwarding instructions accordingly. The forwarding behavior and the end result 
   is same as IGP based Node-SID in SR.  Thus, from anywhere in the domain, it enforces the
   ECMP-aware shortest-path forwarding of the packet towards the related
   node.</t>     

   <t>For each adjacency in the network, PCECC can allocate an Adj-SID. The PCECC sends
   PCInitiate message to update the label map of each Adj to the
   corresponding nodes in the domain.  Each node (PCC) download the
   label forwarding instructions accordingly. The forwarding behavior and the end result is similar to IGP based
   "Adj-SID" in SR.</t>

   <t>The various mechanism are described in <xref target="I-D.zhao-pce-pcep-extension-pce-controller-sr"/>.</t>     
  </section>
	<section title="Use Cases of PCECC for SR Best Effort (BE) Path" anchor="section-4.1"><t>
   In this mode of the solution, the PCECC just need to allocate the
   node segment ID and adjacency ID (without calculating the explicit
   path for the SR path).  The ingress of the forwarding path just need
   to encapsulate the destination node segment ID on top of the packet.
   All the intermediate nodes will forward the packet based on the 
   destination node SID.  It is similar to the LDP LSP.</t>



	<!--<t>
   The SR BE path examples are explained as below:</t>

	<t>
   Example 1:</t>-->

	
   <t>R1 may send a packet to R8 simply by pushing an SR header with
   segment list {1008} (Node SID for R8). The path would be the based on the routing/nexthop calculation on the routers.</t>

	<!--<t>
   Example 2: local link/node protection:</t>

	<t>
   For the packet which has destination of R3 and after that, R2 may
   preinstalled the backup forwarding entry to protect the R4 node, the
   pre-installed the backup path can go through either node5 or link1 or
   link2 between R2 and R3.  The backup path calculation is locally
   decided by R2 and any existing IP FRR algorithms can be used here.</t>-->

	</section>

	<section title="Use Cases of PCECC for SR Traffic Engineering (TE) Path" anchor="section-4.2">
   <t>SR-TE paths may not follow an IGP SPT.  Such paths
   may be chosen by a PCECC and provisioned on
   the ingress node of the SR-TE path. The SR header consists of a list of
   SIDs (or MPLS labels).  The header
   has all necessary information so that, the packets can be guided from
   the ingress node to the egress node of the path; hence, there is no
   need for any signaling protocol. 
   For the case where strict traffic engineering path is needed, all the
   adjacency SID are stacked, otherwise a combination of node-SID or adj-SID can be used for the SR-TE paths.</t>

	<t>
   Note that the bandwidth reservations is only guaranteed through the enforce of
   the bandwidth admission control.  As for the RSVP-TE LSP case, the control plane signaling also does the link bandwidth reservation in each hop of the
   path.</t>

	<t>
   The SR traffic engineering path examples are explained as bellow:</t>

	<t>
   Note that the node SID for each node is allocated from the
   SRGB and adjacency SID
   for each link are allocated from the SRLB for each
   node.</t>

	<t>
   Example 1:</t>

	<t>
   R1 may send a packet P1 to R8 simply by pushing an SR header with
   segment list {1008}.  Based on the best path, it could be: R1-R2-R3-R8.</t>

	<t>
   Example 2:</t>

	<t>
   R1 may send a packet P2 to R8 by pushing an SR header with segment
   list {1002, 9001, 1008}.  The path should be: R1-R2-(1)link-R3-R8.</t>

	<t>
   Example 3:</t>

	<t>
   R1 may send a packet P3 to R8 via R4 by pushing an SR header with segment list {1004, 1008}.  The path
   could be : R1-R2-R4-R3-R8</t>

	<t>
   The local protection examples for SR TE path are explained as
   below:</t>

	<t>
   Example 4: local link protection:</t>

	<t><list style="symbols">
    <t>R1 may send a packet P4 to R8 by pushing an SR header with segment
      list {1002, 9001, 1008}.  The path should be: R1-R2-(1)link-R3-R8.</t>

	<t>When node R2 receives the packet from R1 which has the header of
      R2-(1)link-R3-R8, and also find out there is a link failure of
      link1, then the R2 can enforce the traffic over the bypass to send out the packet with header of R3-R8
      through link2.</t>

	</list>
	</t>

	<t>
   Example 5: local node protection:

	<list style="symbols">
<t>R1 may send a packet P5 to R8 by pushing an SR header with segment
   list {1004, 1008}.  The path should be : R1-R2-R4-R3-R8.</t>

<t>When node R2 receives the packet from R1 which has the header of
   {1004, 1008}, and also find out there is a node failure for node4,
   then it can enforce the traffic over the bypass and send out the packet with header of {1005, 1008} to
   node5 instead of node4.</t>
</list></t>
	</section>

	</section>

	<section title="Use Cases of PCECC for TE LSP" anchor="section-5"><t>
   In the previous sections, we have discussed the cases where the SR
   path is setup through the PCECC.  Although those cases give the
   simplicity and scalability, but there are existing functionalities
   for the traffic engineering path such as the bandwidth guarantee, monitoring
   where SR based solution are complex.  Also there are cases where the
   depth of the label stack is an issue for existing
   deployment and certain vendors.</t>

   <t> 
   So to address these issues, PCECC architecture also support
   the TE LSP functionalities.  To achieve this, the
   existing PCEP can be used to communicate between the PCECC and
   nodes along the path. This is similar to static LSPs, where LSPs
   can be provisioned as explicit label instructions at each hop on the
   end-to-end path.  Each router along the path must be told what label-
   forwarding instructions to program and what resources to reserve.
   The PCE-based controller keeps a view of the network and determines
   the paths of the end-to-end LSPs, and the controller uses PCEP to
   communicate with each router along the path of the end-to-end LSP.</t>

	<figure title="PCECC TE LSP Setup Example" anchor="fig-te"><artwork><![CDATA[
                       192.0.2.1/32
                      +----------+
                      | R1       |
                      +----------+
                        |       |
                        |link1  |
                        |       |link2
                       +----------+
                       | R2       |  192.0.2.2/32
                       +----------+
                link3 *   |   *    * link4
                     *    |   *     *
                    *link5|   *      *
     192.0.2.4/32  *      |   *link6  *  192.0.2.5/32
        +-----------+     |   *     +-----------+
        | R4        |     |   *     | R5        |
        +-----------+     |   *     +-----------+
                   *      |   *      *       +
            link10  *     |   *     *link7   +
                     *    |   *    *         +
                     +-----------+   +-----------+
        192.0.2.3/32 | R3        |   |R6         |192.0.2.6/32
                     +-----------+   +-----------+
                      |         |
                      |link8    |
                      |         |link9
                     +-----------+
                     | R8        |  192.0.2.8/32
                     +-----------+


]]></artwork>
	</figure>
  <t>
	<list style="symbols">
<t>Based on path computation request / delegation or PCE initiation, the PCECC
receives the PCECC request with constraints and optimization criteria. </t>

<t>PCECC would calculate the optimal path according to given constrains
   (i.e.bandwidth).</t>

<t>PCECC would provision each node along the path and assign incoming and outgoing labels from R1 to R8 with the
   path: {R1, link1, 1001}, {1001, R2, link3, 2003], {2003, R4, link10, 4010}, {4010, R3, link8, 3008}, {3008, R8}.</t>

<t>For the end to end protection, PCECC program each node along the
   path from R1 to R8 with the secondary path: {R1, link2, 1002},
   {1002, R2, link4, 2004], {2004, R5, link7, 5007}, {5007, R3, link9, 3009}, {3009, R8}.</t>

<t>It is also possible to have a bypass path for the local
   protection setup by the PCECC.  For example, the primary path as above, then to protect the node
   R4 locally, PCECC can program the bypass path like this: 
   {R2, link5, 2005], {2005, R3}. By doing
   this, the node R4 is locally protected at R2.</t>
</list></t>
	<section title="PCECC Load Balancing (LB) Use Case" anchor="section-5.1">
  <t>
   Very often many service providers use TE tunnels for solving issues
   with non-deterministic paths in their networks. One example of such
   applications is usage of TEs in the mobile backhaul (MBH).
   Let's consider the following typical topology.</t>

	<figure><artwork><![CDATA[
                              TE1 -------------->
+---------+    +--------+    +--------+    +--------+    +------+  +---+
| Access  |----| Access |----| AGG 1  |----| AGG N-1|----|Core 1|--|SR1|
| SubNode1|    | Node 1 |    +--------+    +--------+    +------+  +---+
+---------+    +--------+         | |           | ^          |
     |   Access    |    Access    | AGG Ring 1  | |          |
     |  SubRing 1  |    Ring 1    | |           | |          |
+---------+    +--------+    +--------+         | |          |
| Access  |    | Access |    | AGG 2  |         | |          |
| SubNode2|    | Node 2 |    +--------+         | |          |
+---------+    +--------+         | |           | |          |
     |             |              | |           | |          |
     |             |              | +----TE2----|-+          |
+---------+    +--------+    +--------+    +--------+    +------+  +---+
| Access  |    | Access |----| AGG 3  |----| AGG N  |----|Core N|--|SRn|
| SubNodeN|----| Node N |    +--------+    +--------+    +------+  +---+
+---------+    +--------+
]]></artwork>
	</figure>
	<t>
   This MBH architecture uses L2 access rings and subrings. L3 starts at
   aggregation. For the sake of simplicity here we have only one access
   subring, access ring and aggregation ring (AGG1...AGGN), connected
   by Nx10GE interfaces. Aggregation domain runs its own IGP. There are
   two Egress routers (AGG N-1,AGG N) that are connected to the Core
   domain via L2 interfaces. Core also have connections to service routers,
   RSVP TEs are used for MPLS transport inside the ring. There could be
   at least 2 tunnels (one way) from each AGG router to egress AGG
   routers. There are also many L2 access rings connected to AGG routers.</t>

	<t>
   Service deployment made by means of either L2VPNs (VPLS) or L3VPNs.
   Those services use MPLS TE as transport towards egress AGG routers.
   TE tunnels could be also used as transport towards service routers in
   case of seamless MPLS based architecture in the future.</t>

  <t>There is a need to solve the following tasks: 
  <list style="symbols">

	<t>Perform automatic  LB amongst TE tunnels according to current
       traffic load.</t>
	<t>TE bandwidth (BW) management: Provide guaranteed BW for specific
       service: HSI, IPTV, etc., provide time-based BW reservation (BoD) for other services.</t>
  <t>Simplify development of TE tunnels by automation without any manual intervention.</t>
  
	<t>Provide flexibility for Service Router placement (anywhere
       in the network by creation of  transport LSPs to them).</t>
  </list></t>
	<t>Since other tasks are considered in other PCECC use cases above,
	hereafter we will focus only on load balancing (LB) task. LB task
   could be solved by means of PCECC in the following way:
	<list style="symbols">
    <t>After application or network service or operator can ask SDN
       controller (PCECC) for LSP based LB between AGG X and AGG N/AGG N-1
       (egress AGG routers which have connections to core) via North
       Bound Interface (NBI). Each of these would have associated 
       constrains (i.e. LSP type: traditional
       CR-LSP or SR-TE LSP, bandwidth, inclusion or exclusion specific links
       or nodes, number of paths, shortest path or minimum cost tree, need
       for disjoint LSP paths etc.).</t>

	<t>PCECC could calculate multiple (Say N) LSPs according to given constrains,
       calculation is based on results of Objective Function (OF), constraints, endpoints, same or different
       bandwidth (BW) , different links (in case of disjoint paths) and other
       constrains.</t>

	<t>Depending on given LSP Path setup type (PST), PCECC would use download 
    instructions to the PCC. At this stage it is assumed the PCECC is aware 
    of the label space it controls and in case of SR the SID allocation and 
    distribution is already done.</t>

	<t>PCECC would send PCInitiate PCEP message <xref target="RFC8281"/> towards ingress AGG X router(PCC) for each of N LSPs
       and receives PCRpt PCEP message <xref target="RFC8231"/> back from
       PCCs. If the PST is PCECC-SR, the PCECC would include the SID stack as per <xref target="I-D.ietf-pce-segment-routing"/>. 
       If the PST is PCECC (basic), then the PCECC would assigns labels along the calculated path; and set up the
   path by sending central controller instructions in PCEP message to each node along the path of the
   LSP as per <xref target="I-D.zhao-pce-pcep-extension-for-pce-controller"/> and then
       send PCUpd message to the ingress AGG X router with
       information about new LSP and AGG X(PCC) would respond with PCRpt
       with LSP status.</t>

		<t>AGG X as ingress router now have N LSPs towards AGG N and AGG N-1
       which are available for installing to router's forwarding and LB of traffic
       between them. Traffic distribution between those LSPs depends on
       particular realization of hash-function on that router.</t>

	<t>Since PCECC knows as LSDB as TEDB (TE state) he can manage and
       prevent possible oversubscriptions and limit number of available LB
       states. Via PCECC mechanism the control can take quick actions into 
       the network by directly provisioning the central control instructions.</t>

	</list>
	</t>
  

	</section>

	<section title="PCECC and Inter-AS TE" anchor="section-5.2">
    <t>
   There are various signaling options for establishing Inter-AS TE LSP:
   contiguous TE LSP <xref target="RFC5151"/>, stitched TE LSP <xref target="RFC5150"/>,
   nested TE LSP <xref target="RFC4206"/>.</t>

	<t>
   Requirements for PCE-based Inter-AS setup <xref target="RFC5376"/> describe the approach
   and PCEP functionality that are needed for establishing Inter-AS TE LSPs.</t>

	<t>
   <xref target="RFC5376"/> also gives Inter- and Intra-AS PCE Reference Model that is
   provided below in shorten form for the sake of simplicity.</t>

	<figure><artwork><![CDATA[
           Inter-AS       Inter-AS
     PCC <-->PCE1<--------->PCE2
      ::      ::             ::
      ::      ::             ::
      R1----ASBR1====ASBR3---R3---ASBR5
      |   AS1 |        |    PCC     |
      |       |        |    AS2     |
      R2----ASBR2====ASBR4---R4---ASBR6
      ::                     ::
      ::                     ::
   Intra-AS               Intra-AS
      PCE3                   PCE4

 Shorten form of Inter- and Intra-AS PCE Reference Model [RFC5376]
]]></artwork>
	</figure>
  <t>The PCECC belonging to different domain can co-operate to setup inter-AS TE LSP. 
    The stateful H-PCE <xref target="I-D.ietf-pce-stateful-hpce"/> mechanism could be used to first establish a per-domain PCECC
    LSP. These could be stitched together to form inter-AS TE LSP as described in <xref target="I-D.dugeon-pce-stateful-interdomain"/>.</t>
	<t>
   Hereatfter we will focus on a simplified Inter-AS case when both AS1 and
   AS2 belong to the same service provider administration. In that case Inter
   and Intra-AS PCEs could be combined in one single PCE if such combined PCE
   performance is enough for handling all Path Computation Requests. Even
   more in that particular case we potentially could use single PCE for both
   ASes if the scalability and performance are enough, we require
   interfaces (PCEP and BGP-LS) to both domains. PCECC redundancy
   mechanisms are described in <xref target="RFC8283"/>. Thus routers in AS1 and AS2 (PCCs)
   can send Path Computation messages towards same PCECC.</t>

	<figure><artwork><![CDATA[
             +----BGP-LS------+ +------BGP-LS-----+
             |                | |                 |
      +-PCEP-|----++-+-------PCECC-----PCEP--++-+-|-------+
    +-:------|----::-:-+                  +--::-:-|-------:---+
    | :      |    :: : |                  |  :: : |       :   |
    | :     RR1   :: : |                  |  :: : RR2     :   |
    | v           v: : |      LSP1        |  :: v         v   |
    | R1---------ASBR1=======================ASBR3--------R3  |
    | |            v : |                  |  :v            |  |
    | +----------ASBR2=======================ASBR4---------+  |
    | |   Region 1   : |                  |  : Region 1    |  |
    |----------------:-|                  |--:-------------|--|
    | |              v |       LSP2       |  v             |  |
    | +----------ASBR5=======================ASBR6---------+  |
    |     Region 2     |                  |       Region 2    |
    +------------------+ <--------------> +-------------------+
        MPLS Domain 1          Inter-AS         MPLS Domain 2
    <=======AS1=======>                    <========AS2=======>

               Particular case of Inter-AS PCE
]]></artwork>
	</figure>
	<t>
   In a case of PCECC Inter-AS TE scenario where service provider
   controls both domains (AS1 and AS2), each of them have own IGP and MPLS
   transport. There is a need is to setup Inter-AS LSPs for transporting different
   services on top of them (Voice, L3VPN etc.). Inter-AS links with different
   capacity exist in several regions. The task is not only to provision
   those Inter-AS LSPs with given constrains but also calculate the path
   and pre-setup the backup Inter-AS LSPs that will be used if primary LSP fails.</t>

	<t>
   For the figure above it would be that LSP1 from R1 to R3 may go via ASBR1
   and ASBR3, and it is the primary Inter-AS LSP. R1-R3 LSP2 that go via
   ASBR5 and ASBR6 is the backup one. In adition there could be bypass LSP
   setup to protect against ASBR or inter-AS link failure.</t>

	<t>
   After the addition of PCECC functionality to PCE (SDN controller), PCECC
   based Inter-AS TE model SHOULD follow as PCECC usecase for TE LSP 
   as requirements of <xref target="RFC5376"/> with the following details:

	<list style="symbols">
	<t>Since PCECC needs to know the topology of both domains AS1 and AS2, PCECC
       could use BGP-LS peering with routers (or RRs) in both domains.</t>

	<t>PCECC needs to PCEP connectivity towards all routers in both
       domains (see also section 4 in <xref target="RFC5376"/>) in a similar manner as a SDN controller.</t>

	<t>After operator's application or service orchestrator will create request
       for tunnel creation of specific service, PCECC SHOULD receive that request via NBI
       (NBI type is implementation dependent, MAY be NETCONF/Yang, REST etc.). Then
       PCECC would calculate the optimal path based on Objective Function (OF) and given
       constrains (i.e. path setup type, bandwidth etc.), including those from <xref target="RFC5376"/>:
       priority, AS sequence, preferred ASBR, disjoint paths, protection. On this
       step we would have two paths: R1-ASBR1-ASBR3-R3, R1-ASBR5-ASBR6-R3</t>

	<t>Depending on given LSP PST (PCECC or PCECC-SR), PCECC would use download 
    instructions to the PCC. At this stage it is assumed the PCECC is aware 
    of the label space it controls and in case of SR the SID allocation and 
    distribution is already done.</t>

  <t>PCECC would send PCInitiate PCEP message <xref target="RFC8281"/> towards ingress router R1 (PCC) in AS1
       and receives PCRpt PCEP message <xref target="RFC8231"/> back from
       PCC. If the PST is PCECC-SR, the PCECC would include the SID stack as per <xref target="I-D.ietf-pce-segment-routing"/>.
       It may also include binding SID based on AS boundary. The backup SID stack could also be installed at ingress but more importantly 
       each node along the SR path could also do local protection just based on the top segement. 
       If the PST is PCECC (basic), then the PCECC would assigns labels along the calculated paths (R1-ASBR1-ASBR3-R3, R1-ASBR5-ASBR6-R3); and set up the
   path by sending central controller instructions in PCEP message to each node along the path of the
   LSPs as per <xref target="I-D.zhao-pce-pcep-extension-for-pce-controller"/> and then
       send PCUpd message to the ingress R1 router with
       information about new LSPs and R1 would respond with PCRpt
       with LSP(s) status.</t>

    <t>AGG X as ingress router now have N LSPs towards AGG N and AGG N-1
       which are available for installing to router's forwarding and LB of traffic
       between them. Traffic distribution between those LSPs depends on
       particular realization of hash-function on that router.</t>

	<t>After that step R1 now have primary and backup TEs (LSP1 and LSP2) towards
       R3. It is up to router implementation how to 
       make switchover to backup LSP2 if LSP1 fails.</t>

  </list></t>
	</section>

	</section>

	<section title="Use Cases of PCECC for Multicast LSPs" anchor="section-6"><t>
   The current multicast LSPs are setup either using the RSVP-TE P2MP or
   mLDP protocols.  The setup of these LSPs may require 
   manual configurations and complex signaling when the
   protection is considered.  By using the PCECC solution, the multicast
   LSP can be computed and setup through centralized controller which
   has the full picture of the topology and bandwidth usage for each
   link.  It not only reduces the complex configurations comparing the
   distributed RSVP-TE P2MP or mLDP signaling, but also it can
   compute the disjoint primary path and secondary P2MP path efficiently.</t>

	<section title="Using PCECC for P2MP/MP2MP LSPs' Setup" anchor="section-6.1">
    <!--<t>
   With the capability of global label and local label existing at the
   same time in the PCECC network, PCECC will use compute, setup and
   maintain the P2MP and MP2MP lsp using the local label range for each
   network nodes.</t>-->
   <t>It is assumed the PCECC is aware of the label space it controls for 
    all nodes and make allocations accordingly.</t>

	<figure><artwork><![CDATA[
                       +----------+
                       |    R1    | Root node of the multicast LSP
                       +----------+
                           |6000
                       +----------+
        Transit Node   |    R2    |
        branch         +----------+
                       *  |   *  *
                  9001*   |   *   *9002
                     *    |   *    *
        +-----------+     |   *     +-----------+
        |    R4     |     |   *     |    R5     | Transit Nodes
        +-----------+     |   *     +-----------+
                   *      |   *      *     +
                9003*     |   *     *      +9004
                     *    |   *    *       +
                     +-----------+  +-----------+
                     |    R3     |  |    R6     | Leaf Node
                     +-----------+  +-----------+
                      9005|
                     +-----------+
                     |    R8     | Leaf Node
                     +-----------+

]]></artwork>
	</figure>
  <t>The P2MP examples are explained here, where R1 is root and R8 and R6 are the leaves.
  <list style="symbols">
<t>Based on the P2MP path computation request / delegation or PCE initiation, the PCECC
receives the PCECC request with constraints and optimization criteria. </t>

<t>PCECC would calculate the optimal P2MP path according to given constrains
   (i.e.bandwidth).</t>

<t>PCECC would provision each node along the path and assign incoming and outgoing labels from R1 to {R6, R8} with the
   path: {R1, 6000}, {6000, R2, {9001,9002}}, {9001, R4, 9003}, {9002, R5, 9004} {9003, R3, 9005}, {9004, R6}, {9005, R8}. The main difference
   is in the branch node instruction at R2 where two copies of packet are sent towards R4 and R5 with 9001 and 9002 labels respectively.</t>

  </list></t>
  <t>The packet forwarding involves - 
  <list>
	<t>
   Step1: R1 may send a packet P1 to R2 simply by pushing an label of
   6000 to the packet.</t>

	<t>
   Step2: After R2 receives the packet with label 6000, it will
   forwarding to R4 by swapping label to 9001 and by swapping label of
   9002 towards R5.</t>

	<t>
   Step3: After R4 receives the packet with label 9001, it will
   forwarding to R3 by swapping to 9003.  After R5 receives the
   packet with label 9002, it will forwarding to R6 by swapping to
   9004.</t>

	<t>
   Step4: After R3 receives the packet with label 9003, it will
   forwarding to R8 by swapping to 9005 and when R5 receives the 
   packet with label 9004, it will swap to 9004 and send to R6.</t>

   <t>Step5: Packet received at R8 and 9005 is popped; packet receives at R6 and 9004 is popped.</t>
  </list></t>
	</section>

	<section title="Use Cases of PCECC for the Resiliency of P2MP/MP2MP LSPs" anchor="section-6.2"><section title="PCECC for the End-to-End Protection of the P2MP/MP2MP LSPs" anchor="section-6.2.1"><t>
   In this section we describe the end-to-end managed path protection
   service as well as the local protection with the operation management in the
   PCECC network for the P2MP/MP2MP LSP.</t>

	<t>
   An end-to-end protection principle can be
   applied for computing backup P2MP or MP2MP LSPs.  During computation
   of the primary multicast trees, PCECC server may also take the computation of a secondary tree into
   consideration.  A PCE may compute the
   primary and backup P2MP (or MP2MP) LSP together or sequentially.</t>

	<figure><artwork><![CDATA[
                            +----+  +----+
           Root node of LSP | R1 |--| R11|
                            +----+  +----+
                              /         +
                           10/           +20
                            /             +
                    +----------+        +-----------+
     Transit Node   |    R2    |        |     R3    |
                    +----------+        +-----------+
                      |        \       +         +
                      |         \     +          +
                    10|        10\   +20       20+
                      |           \ +            +
                      |            \             +
                      |           + \            +
                    +-----------+      +-----------+ Leaf Nodes
                    |    R4     |      |    R5     | (Downstream LSR)
                    +-----------+      +-----------+
]]></artwork>
	</figure>
	<t>
   In the example above, when the PCECC setup the primary multicast tree
   from the root node R1 to the leaves, which is R1-&gt;R2-&gt;{R4, R5}, at
   same time, it can setup the backup tree, which is R1-&gt;R11-&gt;R3-&gt;{R4, R5}.
   Both the these two primary forwarding tree and secondary forwarding
   tree will be downloaded to each routers along the primary path and
   the secondary path.  The traffic will be forwarded through the
   R1-&gt;R2-&gt;{R4, R5} path normally, and when there is a node in the
   primary tree fails (say R2), then the root node R1 will switch the flow to the
   backup tree, which is R1-&gt;R11-&gt;R3-&gt;{R4, R5}.  By using the PCECC, the
   path computation and forwarding path downloading can all be done
   without the complex signaling used in the P2MP RSVP-TE or mLDP.</t>

	</section>

	<section title="PCECC for the Local Protection of the P2MP/MP2MP LSPs" anchor="section-6.2.2"><t>
   In this section we describe the local protection service in the PCECC
   network for the P2MP/MP2MP LSP.</t>

	<t>
   While the PCECC sets up the primary multicast tree, it can also build
   the back LSP among PLR, the protected node, and MPs (the downstream
   nodes of the protected node).  In the cases where the amount of
   downstream nodes are huge, this mechanism can avoid unnecessary
   packet duplication on PLR and protect the network from traffic
   congestion risk.</t>

	<figure><artwork><![CDATA[
                            +------------+
                            |     R1     | Root Node
                            +------------+
                                   .
                                   .
                                   .
                            +------------+ Point of Local Repair/
                            |     R10     | Switchover Point
                            +------------+ (Upstream LSR)
                              /         +
                           10/           +20
                            /             +
                    +----------+        +-----------+
     Protected Node |    R20   |        |     R30   |
                    +----------+        +-----------+
                      |        \       +         +
                      |         \     +          +
                    10|        10\   +20       20+
                      |           \ +            +
                      |            \             +
                      |           + \            +
                    +-----------+      +-----------+ Merge Point
                    |    R40    |      |    R50    | (Downstream LSR)
                    +-----------+      +-----------+
                          .                  .
                          .                  .
]]></artwork>
	</figure>
	<t>
   In the example above, when the PCECC setup the primary multicast path
   around the PLR node R10 to protect node R20, which is R10-&gt;R20-&gt;{R40,
   R50}, at same time, it can setup the backup path R10-&gt;R30-&gt;{R40,
   R50}.  Both the these two primary forwarding path and secondary bypass
   forwarding path will be downloaded to each routers along the primary
   path and the secondary bypass path.  The traffic will be forwarded through
   the R10-&gt;R20-&gt;{R40, R50} path normally, and when there is a node
   failure for node R20, then the PLR node R10 will switch the flow to
   the backup path, which is R10-&gt;R30-&gt;{R40, R50}.  By using the PCECC,
   the path computation and forwarding path downloading can all be done
   without the complex signaling used in the P2MP RSVP-TE or mLDP.</t>

	</section>

	</section>



	</section>

	<section title="Use Cases of PCECC for LSP in the Network Migration" anchor="section-7"><t>
   One of the main advantages for PCECC solution is that it has backward
   compatibility naturally since the PCE server itself can function as a
   proxy node of MPLS network for all the new nodes which don't support
   the existing MPLS signaling protocol anymore.</t>

	<t>
   As it is illustrated in the following example, the current network
   will migrate to a total PCECC controlled network gradually by
   replacing the legacy nodes.  During the migration, the legacy nodes
   still need to signal using the existing MPLS protocol such as LDP and
   RSVP-TE, and the new nodes setup their portion of the forwarding path
   through PCECC directly.  With the PCECC function as the proxy of
   these new nodes, MPLS signaling can populate through network as
   normal.</t>

	<t>
   Example described in this section is based on network configurations
   illustrated using the following figure:</t>

	<figure><artwork><![CDATA[
+------------------------------------------------------------------+
|                         PCE DOMAIN                               |
|    +-----------------------------------------------------+       |
|    |                       PCECC                         |       |
|    +-----------------------------------------------------+       |
|     ^              ^                      ^            ^         |
|     |      PCEP    |                      |   PCEP     |         |
|     V              V                      V            V         |
| +--------+   +--------+   +--------+   +--------+   +--------+   |
| | NODE 1 |   | NODE 2 |   | NODE 3 |   | NODE 4 |   | NODE 5 |   |
| |        |...|        |...|        |...|        |...|        |   |
| | Legacy |if1| Legacy |if2|Legacy  |if3| PCECC  |if4| PCECC  |   |
| |  Node  |   |  Node  |   |Enabled |   |Enabled |   | Enabled|   |
| +--------+   +--------+   +--------+   +--------+   +--------+   |
|                                                                  |
+------------------------------------------------------------------+

Example: PCECC Initiated LSP Setup In the Network Migration
]]></artwork>
	</figure>
	<t>
   In this example, there are five nodes for the TE LSP from head end
   (Node1) to the tail end (Node5). Where the Node4 and Node5 are centrally
   controlled and other nodes are legacy nodes.</t>

	<t><list style="symbols"><t>Node1 sends a path request message for the setup of LSP
      destinating to Node5.</t>

	<t>PCECC sends to node1 a reply message for LSP setup with the path:
    (Node1, if1),(Node2, if2), (Node3, if3), (Node4, if4), Node5.</t>

	<t>Node1, Node2, Node3 will setup the LSP to Node5 using the local
     labels as usual.</t>

	<t>Then the PCECC will program the outsegment of Node3, the insegment/
      ousegment of Node4, and the insegment for Node5.</t>

	</list>
	</t>

	</section>

	<section title="Use Cases of PCECC for L3VPN and PWE3" anchor="section-8"><t>
   The existing services using MPLS LSP tunnels based on MPLS signalling
   mechanism such L3VPN, PWE3 and IPv6 can be simplified by using the
   PCECC to negoitate the label assignments for the L3VPN, PWE3 and
   Ipv6.</t>

	<t>
   In the case of L3VPN, VPN labels can be negotiated and distributed
   through the PCECC PCEP among the PE router instead of using the BGP
   protocols.</t>

	<t>
   Example described in this section is based on network configurations
   illustrated using the following figure:</t>

	<figure><artwork><![CDATA[
            +-------------------------------------------+
            |                   PCE DOMAIN              |
            |    +-----------------------------------+  |
            |    |                PCECC              |  |
            |    +-----------------------------------+  |
            |           ^          ^              ^     |
            |PWE3/L3VPN | PCEP PCEP|LSP PWE3/L3VPN|PCEP |
            |           V          V              V     |
 +--------+ |     +--------+   +--------+   +--------+  |  +--------+
 |  CE    | |     | PE1    |   | NODE x |   | PE2    |  |  |   CE   |
 |        |...... |        |...|        |...|        |.....|        |
 | Legacy | |if1  | PCECC  |if2|PCCEC   |if3| PCECC  |if4  | Legacy |
 |  Node  | |     | Enabled|   |Enabled |   |Enabled |  |  |  Node  |
 +--------+ |     +--------+   +--------+   +--------+  |  +--------+
            |                                           |
            +-------------------------------------------+

Example: Using PCECC for L3VPN and PWE3
]]></artwork>
	</figure>
	<t>
   In the cast PWE3, instead of using the LDP signalling protocols, the
   lable and port pairs assigned to each pseudowire can be negotiated
   through PCECC among the PE rotuers and the corresponding forwarding
   entries will be distributed into each PE routers through the extended
   PCEP protocols.</t>

	</section>

	<section title="Using PCECC for Traffic Classification Information" anchor="section-9"><t>
   When a TE-LSP is set up, the head end needs to know:</t>

	<t><list style="symbols"><t>how to use it</t>

	<t>What traffic to send on the LSP</t>

	<t>Whether it is a virtual link</t>

	<t>Whether to advertise it in the IGP</t>

	<t>What bits of this information to signal to the tail end</t>

	</list>
	</t>

	<t>
   PCEP allows an Active PCE to set up or modify LSPs.  But we have no
   way to tell the head end how to use the LSP. This is because of
   history.  It used to be the LER that made the request of the PCE, so
   it knew why it wanted the LSP.</t>

	<t>
   With the PCECC architecture by extending the PCEP protocols, it is
   easy to carry this information such as how to use the LSP, how to
   advertise the LSP and other extra signaling information.</t>

	</section>
  </section>


	<section title="IANA Considerations" anchor="section-11"><t>
   This document does not require any action from IANA.</t>

	</section>

	<section title="Security Considerations" anchor="section-12"><t>
   TBD.</t>

	</section>

	<section title="Acknowledgments" anchor="section-13"><t>
   We would like to thank Adrain Farrel, Aijun Wang, Robert Tao,
   Changjiang Yan, Tieying Huang, Sergio Belotti, Dieter Beller, Andrey Elperin
   and Evgeniy Brodskiy for their useful comments and suggestions.</t>

	</section>

	</middle>

	<back>
    
	<references title="Normative References">
	&RFC2119;
	&RFC5440;
  &RFC8174;
	&RFC8283;
  </references>
	<references title="Informative References">
	&RFC4206;
  &RFC5150;
  &RFC5151;
  &RFC5441;
	&RFC5541;
	&RFC5376;
  &RFC8231;
  &RFC8281;
  &RFC8355;
  &RFC8402;
  &I-D.ietf-pce-segment-routing;
  &I-D.ietf-pce-stateful-hpce;
	&I-D.zhao-pce-pcep-extension-for-pce-controller;
  &I-D.zhao-pce-pcep-extension-pce-controller-sr;
  &I-D.li-pce-controlled-id-space;
  &I-D.dugeon-pce-stateful-interdomain;
	    <reference anchor="MAP-REDUCE" target="http://leeky.me/publications/mapreduce_p2p.pdf">
        <front>
            <title>Parallel Processing Framework on a P2P System Using Map and Reduce Primitives</title>
            <author initials="K" surname="Lee" fullname="Kyungyong Lee">
                <organization />
            </author>
            <author initials="T" surname="Choi" fullname="Tae Woong Choi">
                <organization />
            </author>
            <author initials="A" surname="Ganguly" fullname="Arijit Ganguly">
                <organization />
            </author>
            <author initials="D" surname="Wolinsky" fullname="David I. Wolinsky">
                <organization />
            </author>
            <author initials="P" surname="Boykin" fullname="P.Oscar Boykin">
                <organization />
            </author>
            <author initials="R" surname="Figueiredo" fullname="Renato Figueiredo">
                <organization />
            </author>
            <date month="may" year="2011" />
        </front>
        <seriesInfo name="" value="" />
    </reference>
      <reference anchor="MPLS-DC" target="https://www.slideshare.net/DmitryAfanasiev1/yandex-nag201320131031">
        <front>
            <title>MPLS in DC and inter-DC
              networks: the unified forwarding mechanism for network
              programmability at scale</title>
            <author initials="D" surname="Afanasiev" fullname="Dimitry Afanasiev">
                <organization />
            </author>
            <author initials="D" surname="Ginsburg" fullname="Daniel Ginsburg">
                <organization />
            </author>
            <date month="march" year="2014" />
        </front>
        <seriesInfo name="" value="" />
    </reference>    
	
	</references>
  <section title="Using reliable P2MP TE based multicast delivery for distributed computations (MapReduce-Hadoop)" anchor="section-6.3">
   <t>
   MapReduce model of distributed computations in computing clusters is
   widely deployed. In Hadoop 1.0 architecture MapReduce operations on
   big data performs by means of Master-Slave architecture in the Hadoop
   Distributed File System (HDFS),where NameNode has the knowledge about
   resources of the cluster and where actual data (chunks) for particular
   task are located (which DataNode). Each chunk of data (64MB or more)
   should have 3 saved copies in different DataNodes based on their
   proximity.</t>

  <t>
   Proximity level currently has semi-manual allocation and based on
   Rack IDs (Assumption is that closer data are better because of access
   speed/smaller latency).</t>

  <t>
   JobTracker node is responsible for computation tasks, scheduling across
   DataNodes and also have Rack-awareness. Currently transport protocols
   between NameNode/JobTracker and DataNodes are based on IP unicast.
   It has simplicity as pros but has numerous drawbacks related with
   its flat approach.</t>

  <t>
   It is clear that we should go beyond of one DC for Hadoop cluster creation
   and move towards distributed clusters. In that case we need to handle
   performance and latency issues.
   Latency depends on speed of light in fiber links and also latency
   introduced by intermediate devices in between. The last one is
   closely correlated with network device architecture and performance.
   Current performance of NPU based routers should be enough for creating
   distribute Hadoop clusters with predicted latency. Performance of SW
   based routers (mainly as VNF) together with additional HW features such
   as DPDK are promising but require additional research and testing.</t>

  <t>
   Main question is how can we create simple but effective architecture for
   distributed Hadoop cluster?</t>

  <t>
   There is research <xref target="MAP-REDUCE"/> which show
   how usage of multicast tree could improve speed of resource or cluster
   members discovery inside the cluster as well as increase redundancy in
   communications between cluster nodes.</t>

  <t>
   Is traditional IP based multicast enough for that? We doubt it because it
   requires additional control plane (IGMP, PIM) and a lot of signaling, that
   is not suitable for high performance computations, that are very sensitive
   to latency.</t>

  <t>
   P2MP TE tunnels looks much more suitable as potential solution for creation
   of multicast based communications between Master and Slave nodes inside
   cluster. Obviously these P2MP tunnels should be dynamically created and
   turned down (no manual intervention). Here is there PCECC comes to play.
   His main task is to create optimal topology of each particular request for
   MapReduce computation and also create P2MP tunnels with needed parameters
   such as bandwidth and delay.</t>

  <t>
   This solution would require to use MPLS label based forwarding inside the
   cluster. Usage of label based forwarding inside DC was proposed by Yandex
   <xref target="MPLS-DC"/>. Technically it is already possible because MPLS on switches
   is already supported by some vendors, MPLS also exists on Linux and OVS.</t>

  <t><list style="hanging" hangIndent="-1"><t hangText="The following framework can make this task:">
  <vspace blankLines="0"/>
  </t>

  </list>
  </t>

  <figure><artwork><![CDATA[
                   +--------+
                   |  APP   |
                   +--------+
                        | NBI (REST API,...)
                        |
            PCEP       +----------+  REST API
     +---------+   +---|  PCECC   |----------+
     | Client  |---|---|          |          |
     +---------+   |   +----------+          |
             |     |       | |  |            |
             +-----|---+   |PCEP|            |
          +--------+   |   | |  |            |
          |            |   | |  |            |
          | REST API   |   | |  |            |
          |            |   | |  |            |
+-------------+        |   | |  |           +----------+
| Job Tracker |        |   | |  |           | NameNode |
|             |        |   | |  |           |          |
+-------------+        |   | |  |           +----------+
        +------------------+ |  +-----------+
        |              |     |              |
    |---+-----P2MP TE--+-----|-----------|  |
+----------+       +----------+      +----------+
| DataNode1|       | DataNode2|      | DataNodeN|
|TaskTraker|       |TaskTraker| .... |TaskTraker|
+----------+       +----------+      +----------+
]]></artwork>
  </figure>
  <t>
   Communication between Master nodes (JobTracker and NameNode)
   and PCECC via REST API MAY be either done directly or via
   cluster manager such as Mesos.</t>

  <t>
   Phase 1: Distributed cluster resources discovery
   During this phase Master Nodes SHOULD identify and find available
   Slave nodes according to computing request from application (APP).
   NameNode SHOULD query PCECC about available DataNodes, NameNode MAY
   provide additional constrains to PCECC such as topological proximity,
   redundancy level.</t>

  <t>
   PCECC SHOULD analyze the topology of distributed cluster and perform
   constrain based path calculation [RFC7334] from client towards most
   suitable NameNodes. PCECC SHOULD reply to NameNode the list of most
   suitable DataNodes and their resource capabilities. Topology discovery
   mechanism for PCECC will be added later to that framework.</t>

  <t>
   Phase 2: PCECC SHOULD create P2MP LSP from client towards those
   DataNodes by means of PCLabelUpd [I-D.zhao-pce-pcep-extension-for-pce-controller] PCEP messages following previously calculated path.</t>

  
  <t>Phase 3. NameNode SHOULD send this information to client, PCECC informs
  client about optimal P2MP path towards DataNodes via PCEP PCUpd message.
  </t>

  
  <t>
   Phase 4. Client sends data blocks to those DataNodes for writing via
   created P2MP tunnel.</t>

  <t>
   When this task will be finished, P2MP tunnel MAY be turned down.</t>

  </section>  

  </back>

	</rfc>
	
